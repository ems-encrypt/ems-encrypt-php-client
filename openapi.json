{
    "openapi": "3.0.0",
    "info": {
        "title": "ems-encrypt",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https:\/\/www.ems-encrypt.com"
        }
    ],
    "paths": {
        "\/api\/me": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Get current user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification": {
            "get": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Current user notification list.",
                "description": "You can specify a GET parameter `read_status` to filter results.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeNotificationIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/all\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark all user notifications as read.",
                "operationId": "markAllAsRead",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NoContentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as read.",
                "operationId": "markAsRead",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/unread": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as unread.",
                "operationId": "markAsUnread",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Show User group list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserGroupIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Get specified User group.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "User list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Create and store new user.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password",
                                    "double_optin"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "double_optin": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Get specified user.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Delete specified user.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}\/user": {
            "get": {
                "tags": [
                    "Resource:UserGroup"
                ],
                "summary": "User group user list.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Show i18n lang list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/I18nLangIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Create and store new i18n lang.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A I18nLangResponse",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Get specified i18n lang.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Delete specified i18n Lang.",
                "description": "<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Show user role list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserRoleIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole\/{userRoleId}": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Get specified user role",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userRoleId",
                        "in": "path",
                        "description": "User Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Show project list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Create and store a new project",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Get specified project",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Delete specified project",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/project": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Current user project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjects",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "List of relationships between users and projects.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserHasProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Create and store a new user has project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject\/{userId},{projectId}": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Get specified relationship between a user and a project.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Delete specified relationship between a user and a project.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "User relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Project relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjectHasUsers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A SyncTask list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Show server list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Create and store a new server",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Get specified server",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Delete specified server",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/server": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Show task type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType\/{taskTypeId}": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Get specified task type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskTypeId",
                        "in": "path",
                        "description": "Task Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Show server type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Get specified server type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}\/server": {
            "get": {
                "tags": [
                    "Resource:ServerType"
                ],
                "summary": "Server type server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Show task list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Create and store a new task",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "task_type_id"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "task_type_id": {
                                        "type": "string"
                                    },
                                    "server_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Get specified task",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Task",
                    "Resource:Task"
                ],
                "summary": "Delete specified task",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}\/task": {
            "get": {
                "tags": [
                    "Resource:Server"
                ],
                "summary": "Show server task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/task": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "Show user task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Show task log list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskLogIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog\/{taskLogId}": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Get specified task log",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:TaskLog",
                    "Resource:TaskLog"
                ],
                "summary": "Delete specified task log",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}\/taskLog": {
            "get": {
                "tags": [
                    "Resource:Task"
                ],
                "summary": "Show task task log list",
                "operationId": "getTaskLogs",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task log list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Show certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/CertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Create and store a new certificate",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "domain",
                                    "project_id"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "enum": [
                                            "NONE",
                                            "PENDING_GENERATION"
                                        ],
                                        "type": "string"
                                    },
                                    "cert_pem": {
                                        "type": "string"
                                    },
                                    "chain_pem": {
                                        "type": "string"
                                    },
                                    "fullchain_pem": {
                                        "type": "string"
                                    },
                                    "private_key_pem": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "description": "Must be a valid date according to the strtotime PHP function."
                                    },
                                    "lets_encrypt": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Get specified certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Certificate",
                    "Resource:Certificate"
                ],
                "summary": "Delete specified certificate",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/certificate": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project certificate list",
                "operationId": "getCertificates",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Show order list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/OrderIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order\/{orderId}": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Get specified order",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/order": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate order list",
                "operationId": "getOrders",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Show server has certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerHasCertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Create and store a new server has certificate",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "server_id",
                                    "domain",
                                    "project_id"
                                ],
                                "properties": {
                                    "server_id": {
                                        "type": "string"
                                    },
                                    "domain": {
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "enum": [
                                            "NONE",
                                            "TO_INSTALL",
                                            "INSTALLED"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created ServerHasCertificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate\/{serverId},{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Get specified server has certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:ServerHasCertificate",
                    "Resource:ServerHasCertificate"
                ],
                "summary": "Delete specified certificate",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Field error"
                            },
                            "description": "Field errors"
                        },
                        "description": "Fields errors map"
                    },
                    "status_code": {
                        "type": "integer",
                        "description": "Error status code"
                    },
                    "debug": {
                        "required": [
                            "line",
                            "file",
                            "class",
                            "trace"
                        ],
                        "properties": {
                            "line": {
                                "type": "integer",
                                "description": "Code file line where error occurred"
                            },
                            "file": {
                                "type": "string",
                                "description": "Error file name"
                            },
                            "class": {
                                "type": "string",
                                "description": "Error class name"
                            },
                            "trace": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Error trace"
                                },
                                "description": "Error traces"
                            }
                        },
                        "description": "Debug mode extra info"
                    }
                }
            },
            "Pagination": {
                "required": [
                    "total",
                    "count",
                    "per_page",
                    "current_page",
                    "total_pages",
                    "links"
                ],
                "properties": {
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 434
                    },
                    "count": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "per_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "current_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "total_pages": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 44
                    },
                    "links": {
                        "properties": {
                            "next": {
                                "type": "string",
                                "format": "url"
                            },
                            "previous": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "Meta": {
                "properties": {
                    "pagination": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    }
                }
            },
            "I18nLang": {
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "I18nLangResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/I18nLang"
                    }
                }
            },
            "I18nLangListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/I18nLang"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "User": {
                "required": [
                    "id",
                    "user_group_id",
                    "name",
                    "email",
                    "preferred_language",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_group_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "preferred_language": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "UserResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/User"
                    }
                }
            },
            "UserListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "UserGroup": {
                "required": [
                    "id",
                    "users_count"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "users_count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserGroupResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserGroup"
                    }
                }
            },
            "UserGroupListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserGroup"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Notification": {
                "required": [
                    "id",
                    "type",
                    "notifiable_id",
                    "notifiable_type",
                    "data",
                    "read_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string"
                    },
                    "notifiable_id": {
                        "type": "string"
                    },
                    "notifiable_type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NotificationResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Notification"
                    }
                }
            },
            "NotificationListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Notification"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "NoContentResponse": {
                "description": "No Content"
            },
            "UserRole": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "UserRoleResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserRole"
                    }
                }
            },
            "UserRoleListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserRole"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Project": {
                "required": [
                    "id",
                    "name",
                    "public_key",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "search_engine_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "authorization_webhook_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Project"
                    }
                }
            },
            "ProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Project"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                },
                "example": {
                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                }
            },
            "UserHasProject": {
                "required": [
                    "user_id",
                    "project_id",
                    "user_role_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_role_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserResponse"
                    },
                    "project": {
                        "$ref": "#\/components\/schemas\/ProjectResponse"
                    }
                }
            },
            "UserHasProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserHasProject"
                    }
                }
            },
            "UserHasProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserHasProject"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Server": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "server_type_id",
                    "name",
                    "ip",
                    "port",
                    "enabled",
                    "position",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_type_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "login": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Server"
                    }
                }
            },
            "ServerListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Server"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "TaskTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskType"
                    }
                }
            },
            "TaskTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ServerTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerType"
                    }
                }
            },
            "ServerTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Task": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "task_type_id",
                    "server_id",
                    "domain",
                    "order_id",
                    "status",
                    "output",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_type_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "order_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Task"
                    }
                }
            },
            "TaskListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Task"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskLog": {
                "required": [
                    "id",
                    "server_id",
                    "task_id",
                    "status",
                    "output",
                    "position",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskLogResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskLog"
                    }
                }
            },
            "TaskLogListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskLog"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Certificate": {
                "required": [
                    "domain",
                    "project_id",
                    "status",
                    "cert_pem",
                    "chain_pem",
                    "fullchain_pem",
                    "private_key_pem",
                    "expires_at",
                    "lets_encrypt",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "PENDING_GENERATION",
                            "GENERATED",
                            "FAILED_GENERATION"
                        ],
                        "type": "string"
                    },
                    "cert_pem": {
                        "type": "string"
                    },
                    "chain_pem": {
                        "type": "string"
                    },
                    "fullchain_pem": {
                        "type": "string"
                    },
                    "private_key_pem": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lets_encrypt": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Certificate"
                    }
                }
            },
            "CertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Certificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Order": {
                "required": [
                    "id",
                    "domain",
                    "project_id",
                    "key_type",
                    "key_size",
                    "domains",
                    "not_before",
                    "not_after",
                    "url",
                    "status",
                    "expires",
                    "identifiers",
                    "authorization_urls",
                    "authorizations",
                    "finalize_url",
                    "certificate_url",
                    "certificate_private_key",
                    "certificate_public_key",
                    "certificate_certificate",
                    "certificate_fullchain",
                    "fetched_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key_type": {
                        "type": "string"
                    },
                    "key_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "domains": {
                        "type": "string",
                        "format": "json"
                    },
                    "not_before": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "not_after": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "identifiers": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorization_urls": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorizations": {
                        "type": "string",
                        "format": "json"
                    },
                    "finalize_url": {
                        "type": "string"
                    },
                    "certificate_url": {
                        "type": "string"
                    },
                    "certificate_private_key": {
                        "type": "string"
                    },
                    "certificate_public_key": {
                        "type": "string"
                    },
                    "certificate_certificate": {
                        "type": "string"
                    },
                    "certificate_fullchain": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Order"
                    }
                }
            },
            "OrderListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Order"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerHasCertificate": {
                "required": [
                    "server_id",
                    "project_id",
                    "domain",
                    "status",
                    "status_updated_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "TO_INSTALL",
                            "INSTALLED"
                        ],
                        "type": "string"
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerHasCertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerHasCertificate"
                    }
                }
            },
            "ServerHasCertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerHasCertificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            }
        },
        "parameters": {
            "Include": {
                "name": "include",
                "in": "query",
                "description": "Include responses : {include1},{include2,{include3}[...]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Search": {
                "name": "search",
                "in": "query",
                "description": "Search words",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "PaginationPage": {
                "name": "page",
                "in": "query",
                "description": "Pagination : Page number",
                "required": false,
                "schema": {
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                }
            },
            "PaginationLimit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination : Maximum entries per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": 20
                }
            },
            "OrderBy": {
                "name": "order_by",
                "in": "query",
                "description": "Order by : {field},[asc|desc]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "examples": {
            "MeIndexExampleResponse": {
                "value": {
                    "data": {
                        "id": "41abdec2-1389-11e7-93ae-92361f002671",
                        "user_group_id": "Developer",
                        "name": "John Doe",
                        "email": "john.doe@domain.tld",
                        "preferred_language": "en",
                        "created_at": "2019-02-21 15:05:37",
                        "updated_at": "2019-02-21 15:05:37"
                    }
                }
            },
            "MeNotificationIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "6a570a5a-2fcb-436b-b4d6-fa677a258176",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "82b5da82-138c-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Mickey Mouse",
                                    "email": "mickey.mouse@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-21 15:05:39.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        },
                        {
                            "id": "ab66cbfa-e8ae-4991-9265-8f4c133f6cb0",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Smith",
                                    "email": "john.smith@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-21 15:05:38.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-21 15:05:38",
                            "updated_at": "2019-02-21 15:05:38"
                        },
                        {
                            "id": "e0d6f81e-71ff-4ec5-b6a1-dcccc317f907",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "509dd5c0-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Alan Smithee",
                                    "email": "alan.smithee@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-21 15:05:38.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-21 15:05:38",
                            "updated_at": "2019-02-21 15:05:38"
                        },
                        {
                            "id": "de749fa6-18e3-497d-8eb7-999552b64cfb",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Doe",
                                    "email": "john.doe@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-21 15:05:37.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-21 15:05:37",
                            "updated_at": "2019-02-21 15:05:37"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserGroupIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Developer",
                            "users_count": 1
                        },
                        {
                            "id": "End-User",
                            "users_count": 2
                        },
                        {
                            "id": "Support",
                            "users_count": 1
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 3,
                            "count": 3,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Developer",
                            "name": "John Doe",
                            "email": "john.doe@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-02-21 15:05:37",
                            "updated_at": "2019-02-21 15:05:37"
                        },
                        {
                            "id": "509dd5c0-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Support",
                            "name": "Alan Smithee",
                            "email": "alan.smithee@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-02-21 15:05:38",
                            "updated_at": "2019-02-21 15:05:38"
                        },
                        {
                            "id": "605c7610-1389-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "John Smith",
                            "email": "john.smith@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-02-21 15:05:38",
                            "updated_at": "2019-02-21 15:05:38"
                        },
                        {
                            "id": "82b5da82-138c-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "Mickey Mouse",
                            "email": "mickey.mouse@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "I18nLangIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "af",
                            "description": "Afrikaans"
                        },
                        {
                            "id": "af_NA",
                            "description": "Afrikaans (Namibia)"
                        },
                        {
                            "id": "af_ZA",
                            "description": "Afrikaans (South Africa)"
                        },
                        {
                            "id": "ak",
                            "description": "Akan"
                        },
                        {
                            "id": "ak_GH",
                            "description": "Akan (Ghana)"
                        },
                        {
                            "id": "am",
                            "description": "Amharic"
                        },
                        {
                            "id": "am_ET",
                            "description": "Amharic (Ethiopia)"
                        },
                        {
                            "id": "ar",
                            "description": "Arabic"
                        },
                        {
                            "id": "ar_AE",
                            "description": "Arabic (United Arab Emirates)"
                        },
                        {
                            "id": "ar_BH",
                            "description": "Arabic (Bahrain)"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 434,
                            "count": 10,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 44,
                            "links": {
                                "next": "http:\/\/ems-encrypt.local\/api\/i18nLang?page=2"
                            }
                        }
                    }
                }
            },
            "UserRoleIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Administrator"
                        },
                        {
                            "id": "Owner"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "name": "Sample Project",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDNX2QOWmeakVqpvErEiuQ5cTmjtJdCYOBwoajh59Od0NPh2rGz2QdW6m5dKntvqodFwKjF6M40\/YqUXewdgPhE7Tanea6NWN7uK0M832ny3u0mlwPonaQQbBynxnO7fTBCOgq0cVyowlr7UXEzhzERSrK5qZAwtQmfb7x1+93f+bUeZttysgoWu541tmyuXFb9ShBBGl2haCkCNHuZi\/JZrBClnxLSm9hI0WjJ6IoZqoEgnOqiPzJp3gPTFYJ5MEwjsVmzttRNpqi8qW4glVRXchLF\/B46lnuwOaGFe9SdFFeVHUuxfKV0Ru6mfHfntbg7Dmd\/tWn+O6csXokKw1aR worker@ems-encrypt\n",
                            "authorization_webhook_url": null,
                            "authorization_webhook_auth_username": null,
                            "authorization_webhook_auth_password": null,
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:41"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "MeProjectIndexExampleResponse": {
                "value": {
                    "data": [],
                    "meta": {
                        "pagination": {
                            "total": 0,
                            "count": 0,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserHasProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_role_id": "Owner",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "server_type_id": "HAProxy",
                            "name": "Sample Server",
                            "ip": "123.123.123.123",
                            "port": 22,
                            "login": "ems_encrypt",
                            "enabled": 1,
                            "position": 1,
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "DeployCertificates"
                        },
                        {
                            "id": "FetchCertificatesStatus"
                        },
                        {
                            "id": "GenerateCertificate"
                        },
                        {
                            "id": "ImportCertificates"
                        },
                        {
                            "id": "LetsEncryptRevokeCertificate"
                        },
                        {
                            "id": "TestServerConnection"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 6,
                            "count": 6,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Apache"
                        },
                        {
                            "id": "HAProxy"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "FetchCertificatesStatus",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": "Sample server deploy task sample...",
                            "started_at": "2018-11-25 10:45:35",
                            "finished_at": "2018-11-26 14:01:32",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskLogIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "412971e2-6321-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 1...",
                            "position": 1,
                            "started_at": "2020-01-27 10:45:35",
                            "finished_at": "2020-01-27 10:46:10",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        },
                        {
                            "id": "505496f6-6321-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 3...",
                            "position": 3,
                            "started_at": "2020-02-28 14:01:27",
                            "finished_at": "2020-02-28 14:01:32",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        },
                        {
                            "id": "8965d40a-631c-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 2...",
                            "position": 2,
                            "started_at": "2020-02-28 09:20:12",
                            "finished_at": "2020-02-28 09:20:42",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 3,
                            "count": 3,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "CertificateIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "domain": "www.test.com",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "NONE",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIGETCCBPmgAwIBAgISAzBCK9CPYfvBmggSZQHFOHQiMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODA5MjUwOTAyMDBaFw0x\nODEyMjQwOTAyMDBaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC\/LdXgRgUy5Wnq+QzE84j+4cZf\nGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1Tb7iFvRR6wu5\niXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR53\/CzYBVHheQ\n0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYPc6X6YRMZ26QP\nJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I3LkDnAu6IPc0\n2yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIRlAZfwgZbAgMB\nAAGjggMbMIIDFzAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFDc3TOiVRFduXVoZVzEL\nbg\/Xa68uMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejCB\/gYDVR0g\nBIH2MIHzMAgGBmeBDAECATCB5gYLKwYBBAGC3xMBAQEwgdYwJgYIKwYBBQUHAgEW\nGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIGrBggrBgEFBQcCAjCBngyBm1Ro\naXMgQ2VydGlmaWNhdGUgbWF5IG9ubHkgYmUgcmVsaWVkIHVwb24gYnkgUmVseWlu\nZyBQYXJ0aWVzIGFuZCBvbmx5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgQ2VydGlm\naWNhdGUgUG9saWN5IGZvdW5kIGF0IGh0dHBzOi8vbGV0c2VuY3J5cHQub3JnL3Jl\ncG9zaXRvcnkvMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYAb1N2rDHwMRnYmQCk\nURX\/dxUcEdkCwQApBo2yCJo32RMAAAFmEC2sNwAABAMARzBFAiBKRRXkQ\/qJEhaB\nbo5gvc+ZWuLChrxKsIZ6FbupJvliNQIhAMP2OzSUCCrA9FKkdg2z8gDiBSbSkCZu\n8w76VBsZlSgCAHYApFASaQVaFVReYhGrN7wQP2KuVXakXksXFEU+GyIQaiUAAAFm\nEC2rSAAABAMARzBFAiEAySvbq0S3xKvDtvb6DG0V88ak1I4unT4tlaidsInFLf4C\nIFE5hIBhpiGtsRkNQ+IL2o56SQASuNFVHx69hp1wT0KJMA0GCSqGSIb3DQEBCwUA\nA4IBAQBc5IgWdTRuyFmRITv1eOzpXs0hvjj04KBhnDNBaCQgtDidEgmI81089+g0\nzdCZyfi1hNlu7R\/\/0SJF\/58juU0vaGE\/b3FTyWUi9iRe9db8MUH76qbb7sEHa3j\/\nTlqsCYVKX3te5u7hGHyCchdDdGaVxBJD4NMt45qcQTo3SNCVWFCRa+aYXVzDPu1V\nTe7YtpmnawbqhfUTI3urdHaLk2FTJfSUPUi5mcqTBlnuzLoTXKXEvNr0UdZE\/Ia+\nJ5d2Ps6a9oA9lJfeXwyH1uSn1brkL3UUHd6DODsmz5rlAjqCxBTdIBYp0lw8QQ85\nytHr6b9PBaNWOHm3UAmiE\/bhcRVQ\n-----END CERTIFICATE-----\n\n",
                            "chain_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n\n",
                            "fullchain_pem": "-----BEGIN CERTIFICATE-----\nMIIGETCCBPmgAwIBAgISAzBCK9CPYfvBmggSZQHFOHQiMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODA5MjUwOTAyMDBaFw0x\nODEyMjQwOTAyMDBaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC\/LdXgRgUy5Wnq+QzE84j+4cZf\nGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1Tb7iFvRR6wu5\niXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR53\/CzYBVHheQ\n0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYPc6X6YRMZ26QP\nJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I3LkDnAu6IPc0\n2yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIRlAZfwgZbAgMB\nAAGjggMbMIIDFzAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFDc3TOiVRFduXVoZVzEL\nbg\/Xa68uMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejCB\/gYDVR0g\nBIH2MIHzMAgGBmeBDAECATCB5gYLKwYBBAGC3xMBAQEwgdYwJgYIKwYBBQUHAgEW\nGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIGrBggrBgEFBQcCAjCBngyBm1Ro\naXMgQ2VydGlmaWNhdGUgbWF5IG9ubHkgYmUgcmVsaWVkIHVwb24gYnkgUmVseWlu\nZyBQYXJ0aWVzIGFuZCBvbmx5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgQ2VydGlm\naWNhdGUgUG9saWN5IGZvdW5kIGF0IGh0dHBzOi8vbGV0c2VuY3J5cHQub3JnL3Jl\ncG9zaXRvcnkvMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYAb1N2rDHwMRnYmQCk\nURX\/dxUcEdkCwQApBo2yCJo32RMAAAFmEC2sNwAABAMARzBFAiBKRRXkQ\/qJEhaB\nbo5gvc+ZWuLChrxKsIZ6FbupJvliNQIhAMP2OzSUCCrA9FKkdg2z8gDiBSbSkCZu\n8w76VBsZlSgCAHYApFASaQVaFVReYhGrN7wQP2KuVXakXksXFEU+GyIQaiUAAAFm\nEC2rSAAABAMARzBFAiEAySvbq0S3xKvDtvb6DG0V88ak1I4unT4tlaidsInFLf4C\nIFE5hIBhpiGtsRkNQ+IL2o56SQASuNFVHx69hp1wT0KJMA0GCSqGSIb3DQEBCwUA\nA4IBAQBc5IgWdTRuyFmRITv1eOzpXs0hvjj04KBhnDNBaCQgtDidEgmI81089+g0\nzdCZyfi1hNlu7R\/\/0SJF\/58juU0vaGE\/b3FTyWUi9iRe9db8MUH76qbb7sEHa3j\/\nTlqsCYVKX3te5u7hGHyCchdDdGaVxBJD4NMt45qcQTo3SNCVWFCRa+aYXVzDPu1V\nTe7YtpmnawbqhfUTI3urdHaLk2FTJfSUPUi5mcqTBlnuzLoTXKXEvNr0UdZE\/Ia+\nJ5d2Ps6a9oA9lJfeXwyH1uSn1brkL3UUHd6DODsmz5rlAjqCxBTdIBYp0lw8QQ85\nytHr6b9PBaNWOHm3UAmiE\/bhcRVQ\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n\n",
                            "private_key_pem": "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC\/LdXgRgUy5Wnq\n+QzE84j+4cZfGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1\nTb7iFvRR6wu5iXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR\n53\/CzYBVHheQ0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYP\nc6X6YRMZ26QPJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I\n3LkDnAu6IPc02yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIR\nlAZfwgZbAgMBAAECggEAExqsdbXpjRV5yR5MFV5UwUukfBp3LfZcNKXDqXePdqpK\nAEXKcBSYqLl3+gEdExkmR6nZUQnuhLJeV9kGCyfKEGmRiV\/g1bc+8ZTtgfeSL5+k\ncX5ZGVQnwnf8LrE3DT4MKwiSwOndKlmvWTot\/TR174uLRVBlvcHoWNHyZM3lW1Tt\nTSCNOA34orj9wvlpGCuoqq2Z8qRylpR7AJpKN21JDIMr\/xYH4XEevkn\/l5g9TK6Z\nW1iurEjU2cPRmqBWbiQvowmfoCo7WLemS5r3UdZ2IukLCtfTMT2lkcfKbLL9PEJU\n1SzGPQJHnJ4BOnpwNYi6ZJaVQV6sw1E0RtQiZtVhkQKBgQDhJCWIQrs\/Pso5wlFA\np0Cgyjz+5gd3zNSryI1Nm9s+WnZ80CFYAlsxrLgQKdGGRm7M64hxgncLZ2OLCn7k\nP5LJ80JX9U4JbAmC3pIWoTjKt26u9Qsk3+rEZsde24Q5io4DsjLZLIzemCQVavUz\n8ErB6daeg\/bEa9Te3jsrLRok4wKBgQDZYgKHcsXTJqC590bvWXqILKxvXGxM4XBC\n9iDos0oLPzXpq1+EEKcWUX8mqmX7aJROZoc\/5EMKnXitnUkkIaY5ikbbkGkOD1tK\niUyXfGQdbJWDjZtO5\/u9rVGZOcAtf984yxyA3wZekTKoMMGzJkIsrK35vqFoaIzN\nESqalV3KKQKBgQC18EEIYWzyCirgDEEfL0nR5jzufDOyw2tluvc9rWK6e95etM8N\nUTIi7YH9Rd4VVZu6q+giWp0bMRzHQt8SUrGr05JchFbg1FbHVFfYQ8ciQqQGbO3p\nia4tsyUQafLrkSV8pSfkStU4GNioGjw3EctH81FF3jyvtLhctlg4ZwVGowKBgQC7\nJvV0day5YG1KDgllMc0bhhKjAZhADGshS1QD46\/gxPf+iEuAoPGpdlqZCGUqsNvW\nL9FLgZLyhaaLGnoJAGti6JiemdLIhxIatuBZH3\/2ETEcBINsyK7km15AJAc\/ZPLi\nq4OLs\/eA3VMWmHt7aHnaioRyGtxNzo1CVAAw\/F22GQKBgQC38Sr1kXz61cQ0+2KR\n2PTwolkwfT1pPvIX0w5vaC3S+JLhRju0btASpxOtFywMiB+qfr1CscJf3UDiHXH2\nDPUoPG0nlUj2joMZHOdCxgpUsyhulIWscrudefgSOB\/aIz5HvQtcs73TKxM8VX38\nsnc5nkufzV1i3jnsg6Qq6cudcw==\n-----END PRIVATE KEY-----\n\n",
                            "lets_encrypt": 0,
                            "expires_at": "2018-11-28 01:01:31",
                            "created_at": "2019-02-21 15:05:39",
                            "updated_at": "2019-02-21 15:05:39"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "OrderIndexExampleResponse": {
                "value": {
                    "data": [],
                    "meta": {
                        "pagination": {
                            "total": 0,
                            "count": 0,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerHasCertificateIndexExampleResponse": {
                "value": {
                    "data": [],
                    "meta": {
                        "pagination": {
                            "total": 0,
                            "count": 0,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiBearer": {
                "type": "http",
                "scheme": "bearer"
            },
            "apiOAuth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    },
                    "authorizationCode": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "tokenUrl": "\/oauth\/token",
                        "refreshUrl": "\/oauth\/token\/refresh",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "apiBearer": [
                "*"
            ]
        },
        {
            "apiOAuth": [
                "*"
            ]
        }
    ]
}
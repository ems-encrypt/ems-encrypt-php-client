{
    "openapi": "3.0.0",
    "info": {
        "title": "ems-encrypt",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https:\/\/www.ems-encrypt.com"
        }
    ],
    "paths": {
        "\/api\/me": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Get current user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification": {
            "get": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Current user notification list.",
                "description": "You can specify a GET parameter `read_status` to filter results.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeNotificationIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/all\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark all user notifications as read.",
                "operationId": "markAllAsRead",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NoContentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as read.",
                "operationId": "markAsRead",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/unread": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as unread.",
                "operationId": "markAsUnread",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Show User group list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserGroupIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Get specified User group.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "User list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Create and store new user.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password",
                                    "double_optin"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "double_optin": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Get specified user.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Delete specified user.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}\/user": {
            "get": {
                "tags": [
                    "Resource:UserGroup"
                ],
                "summary": "User group user list.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Show i18n lang list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/I18nLangIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Create and store new i18n lang.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A I18nLangResponse",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Get specified i18n lang.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Delete specified i18n Lang.",
                "description": "<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Show user role list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserRoleIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole\/{userRoleId}": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Get specified user role",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userRoleId",
                        "in": "path",
                        "description": "User Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Show project list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Create and store a new project",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Get specified project",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Delete specified project",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/project": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Current user project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjects",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "List of relationships between users and projects.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserHasProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Create and store a new user has project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject\/{userId},{projectId}": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Get specified relationship between a user and a project.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Delete specified relationship between a user and a project.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "User relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Project relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjectHasUsers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A SyncTask list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Show server list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Create and store a new server",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "associate_all_certificates": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Get specified server",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Delete specified server",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/server": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Show task type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType\/{taskTypeId}": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Get specified task type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskTypeId",
                        "in": "path",
                        "description": "Task Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Show server type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Get specified server type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}\/server": {
            "get": {
                "tags": [
                    "Resource:ServerType"
                ],
                "summary": "Server type server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Show task list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Create and store a new task",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "task_type_id"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "task_type_id": {
                                        "type": "string"
                                    },
                                    "server_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "domain": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Get specified task",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Task",
                    "Resource:Task"
                ],
                "summary": "Delete specified task",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}\/task": {
            "get": {
                "tags": [
                    "Resource:Server"
                ],
                "summary": "Show server task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/task": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "Show user task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Show task log list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskLogIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog\/{taskLogId}": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Get specified task log",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:TaskLog",
                    "Resource:TaskLog"
                ],
                "summary": "Delete specified task log",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}\/taskLog": {
            "get": {
                "tags": [
                    "Resource:Task"
                ],
                "summary": "Show task task log list",
                "operationId": "getTaskLogs",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task log list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Show certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/CertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Create and store a new certificate",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "domain",
                                    "project_id"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "enum": [
                                            "NONE",
                                            "PENDING_GENERATION",
                                            "GENERATED"
                                        ],
                                        "type": "string"
                                    },
                                    "cert_pem": {
                                        "type": "string"
                                    },
                                    "chain_pem": {
                                        "type": "string"
                                    },
                                    "fullchain_pem": {
                                        "type": "string"
                                    },
                                    "private_key_pem": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "description": "Must be a valid date according to the strtotime PHP function."
                                    },
                                    "lets_encrypt": {
                                        "type": "boolean"
                                    },
                                    "lets_encrypt_challenge_type": {
                                        "enum": [
                                            "http-01",
                                            "dns-01"
                                        ],
                                        "type": "string"
                                    },
                                    "wildcard": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Get specified certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Certificate",
                    "Resource:Certificate"
                ],
                "summary": "Delete specified certificate",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/certificate": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project certificate list",
                "operationId": "getCertificates",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Show order list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/OrderIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order\/{orderId}": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Get specified order",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/order": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate order list",
                "operationId": "getOrders",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/serverHasCertificate": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate server has certificate list",
                "operationId": "getServerHasCertificates",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A server has certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Show server has certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerHasCertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Create and store a new server has certificate",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "server_id",
                                    "domain",
                                    "project_id"
                                ],
                                "properties": {
                                    "server_id": {
                                        "type": "string"
                                    },
                                    "domain": {
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "enum": [
                                            "NONE",
                                            "TO_INSTALL",
                                            "INSTALLED"
                                        ],
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created ServerHasCertificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate\/{serverId},{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Get specified server has certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:ServerHasCertificate",
                    "Resource:ServerHasCertificate"
                ],
                "summary": "Delete specified certificate",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/webhook": {
            "get": {
                "tags": [
                    "Manager:Webhook"
                ],
                "summary": "Show webhook list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Webhook list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/WebhookIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Webhook"
                ],
                "summary": "Create and store a new webhook",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "on_event",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "on_event": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "basic_auth_username": {
                                        "type": "string"
                                    },
                                    "basic_auth_password": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Webhook",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/webhook\/{webhookId}": {
            "get": {
                "tags": [
                    "Manager:Webhook"
                ],
                "summary": "Get specified webhook",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Webhook",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Webhook",
                    "Resource:Webhook"
                ],
                "summary": "Update a specified webhook",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "on_event",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "on_event": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "basic_auth_username": {
                                        "type": "string"
                                    },
                                    "basic_auth_password": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Webhook",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Webhook",
                    "Resource:Webhook"
                ],
                "summary": "Delete specified webhook",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Webhook",
                    "Resource:Webhook"
                ],
                "summary": "Update a specified webhook",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "on_event",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "on_event": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "basic_auth_username": {
                                        "type": "string"
                                    },
                                    "basic_auth_password": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Webhook",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/webhook": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project webhook list",
                "operationId": "getWebhooks",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A webhook list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/webhookCall": {
            "get": {
                "tags": [
                    "Manager:WebhookCall"
                ],
                "summary": "Show webhook call list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A WebhookCall list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookCallListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/WebhookCallIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/webhookCall\/{webhookCallId}": {
            "get": {
                "tags": [
                    "Manager:WebhookCall"
                ],
                "summary": "Get specified webhook call",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "webhookCallId",
                        "in": "path",
                        "description": "Webhook Call UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A WebhookCall",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookCallResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:WebhookCall",
                    "Resource:WebhookCall"
                ],
                "summary": "Delete specified webhook call",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "webhookCallId",
                        "in": "path",
                        "description": "Webhook Call UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/webhook\/{webhookId}\/webhookCall": {
            "get": {
                "tags": [
                    "Resource:Webhook"
                ],
                "summary": "Show webhook webhook calls list",
                "operationId": "getWebhookCalls",
                "parameters": [
                    {
                        "name": "webhookId",
                        "in": "path",
                        "description": "Webhook ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A webhook call list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/WebhookCallListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Field error"
                            },
                            "description": "Field errors"
                        },
                        "description": "Fields errors map"
                    },
                    "status_code": {
                        "type": "integer",
                        "description": "Error status code"
                    },
                    "debug": {
                        "required": [
                            "line",
                            "file",
                            "class",
                            "trace"
                        ],
                        "properties": {
                            "line": {
                                "type": "integer",
                                "description": "Code file line where error occurred"
                            },
                            "file": {
                                "type": "string",
                                "description": "Error file name"
                            },
                            "class": {
                                "type": "string",
                                "description": "Error class name"
                            },
                            "trace": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Error trace"
                                },
                                "description": "Error traces"
                            }
                        },
                        "description": "Debug mode extra info"
                    }
                }
            },
            "Pagination": {
                "required": [
                    "total",
                    "count",
                    "per_page",
                    "current_page",
                    "total_pages",
                    "links"
                ],
                "properties": {
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 434
                    },
                    "count": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "per_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "current_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "total_pages": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 44
                    },
                    "links": {
                        "properties": {
                            "next": {
                                "type": "string",
                                "format": "url"
                            },
                            "previous": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "Meta": {
                "properties": {
                    "pagination": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    }
                }
            },
            "I18nLang": {
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "I18nLangResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/I18nLang"
                    }
                }
            },
            "I18nLangListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/I18nLang"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "User": {
                "required": [
                    "id",
                    "user_group_id",
                    "name",
                    "email",
                    "preferred_language",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_group_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "preferred_language": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "UserResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/User"
                    }
                }
            },
            "UserListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "UserGroup": {
                "required": [
                    "id",
                    "users_count"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "users_count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserGroupResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserGroup"
                    }
                }
            },
            "UserGroupListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserGroup"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Notification": {
                "required": [
                    "id",
                    "type",
                    "notifiable_id",
                    "notifiable_type",
                    "data",
                    "read_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string"
                    },
                    "notifiable_id": {
                        "type": "string"
                    },
                    "notifiable_type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NotificationResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Notification"
                    }
                }
            },
            "NotificationListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Notification"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "NoContentResponse": {
                "description": "No Content"
            },
            "UserRole": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "UserRoleResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserRole"
                    }
                }
            },
            "UserRoleListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserRole"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Project": {
                "required": [
                    "id",
                    "name",
                    "public_key",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "search_engine_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "authorization_webhook_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Project"
                    }
                }
            },
            "ProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Project"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                },
                "example": {
                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                }
            },
            "UserHasProject": {
                "required": [
                    "user_id",
                    "project_id",
                    "user_role_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_role_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserResponse"
                    },
                    "project": {
                        "$ref": "#\/components\/schemas\/ProjectResponse"
                    }
                }
            },
            "UserHasProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserHasProject"
                    }
                }
            },
            "UserHasProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserHasProject"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Server": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "server_type_id",
                    "name",
                    "ip",
                    "port",
                    "enabled",
                    "position",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_type_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "login": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Server"
                    }
                }
            },
            "ServerListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Server"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "TaskTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskType"
                    }
                }
            },
            "TaskTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ServerTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerType"
                    }
                }
            },
            "ServerTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Task": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "task_type_id",
                    "server_id",
                    "domain",
                    "order_id",
                    "status",
                    "output",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_type_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "order_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Task"
                    }
                }
            },
            "TaskListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Task"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskLog": {
                "required": [
                    "id",
                    "server_id",
                    "task_id",
                    "status",
                    "output",
                    "position",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskLogResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskLog"
                    }
                }
            },
            "TaskLogListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskLog"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Certificate": {
                "required": [
                    "domain",
                    "project_id",
                    "status",
                    "cert_pem",
                    "chain_pem",
                    "fullchain_pem",
                    "private_key_pem",
                    "expires_at",
                    "lets_encrypt",
                    "wildcard",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "PENDING_GENERATION",
                            "GENERATED",
                            "FAILED_GENERATION"
                        ],
                        "type": "string"
                    },
                    "cert_pem": {
                        "type": "string"
                    },
                    "chain_pem": {
                        "type": "string"
                    },
                    "fullchain_pem": {
                        "type": "string"
                    },
                    "private_key_pem": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lets_encrypt": {
                        "type": "boolean"
                    },
                    "lets_encrypt_challenge_type": {
                        "enum": [
                            "http-01",
                            "dns-01"
                        ],
                        "type": "string"
                    },
                    "wildcard": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Certificate"
                    }
                }
            },
            "CertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Certificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Order": {
                "required": [
                    "id",
                    "domain",
                    "project_id",
                    "key_type",
                    "key_size",
                    "domains",
                    "not_before",
                    "not_after",
                    "url",
                    "status",
                    "expires",
                    "identifiers",
                    "authorization_urls",
                    "authorizations",
                    "finalize_url",
                    "certificate_url",
                    "certificate_private_key",
                    "certificate_public_key",
                    "certificate_certificate",
                    "certificate_fullchain",
                    "fetched_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key_type": {
                        "type": "string"
                    },
                    "key_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "domains": {
                        "type": "string",
                        "format": "json"
                    },
                    "not_before": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "not_after": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "identifiers": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorization_urls": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorizations": {
                        "type": "string",
                        "format": "json"
                    },
                    "finalize_url": {
                        "type": "string"
                    },
                    "certificate_url": {
                        "type": "string"
                    },
                    "certificate_private_key": {
                        "type": "string"
                    },
                    "certificate_public_key": {
                        "type": "string"
                    },
                    "certificate_certificate": {
                        "type": "string"
                    },
                    "certificate_fullchain": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Order"
                    }
                }
            },
            "OrderListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Order"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerHasCertificate": {
                "required": [
                    "server_id",
                    "project_id",
                    "domain",
                    "status",
                    "status_updated_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "TO_INSTALL",
                            "INSTALLED"
                        ],
                        "type": "string"
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerHasCertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerHasCertificate"
                    }
                }
            },
            "ServerHasCertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerHasCertificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Webhook": {
                "required": [
                    "id",
                    "project_id",
                    "on_event",
                    "url",
                    "basic_auth_username",
                    "basic_auth_password",
                    "enabled",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "on_event": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "url"
                    },
                    "basic_auth_username": {
                        "type": "string"
                    },
                    "basic_auth_password": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WebhookResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Webhook"
                    }
                }
            },
            "WebhookListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Webhook"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "WebhookCall": {
                "required": [
                    "id",
                    "webhook_id",
                    "payload",
                    "status",
                    "response_code",
                    "response_content",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "webhook_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payload": {
                        "type": "string",
                        "format": "json"
                    },
                    "status": {
                        "enum": [
                            "RUNNING",
                            "SUCCESS",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "response_code": {
                        "type": "string"
                    },
                    "response_content": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "WebhookCallResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/WebhookCall"
                    }
                }
            },
            "WebhookCallListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/WebhookCall"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            }
        },
        "parameters": {
            "Include": {
                "name": "include",
                "in": "query",
                "description": "Include responses : {include1},{include2,{include3}[...]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Search": {
                "name": "search",
                "in": "query",
                "description": "Search words",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "PaginationPage": {
                "name": "page",
                "in": "query",
                "description": "Pagination : Page number",
                "required": false,
                "schema": {
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                }
            },
            "PaginationLimit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination : Maximum entries per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": 20
                }
            },
            "OrderBy": {
                "name": "order_by",
                "in": "query",
                "description": "Order by : {field},[asc|desc]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "examples": {
            "MeIndexExampleResponse": {
                "value": {
                    "data": {
                        "id": "41abdec2-1389-11e7-93ae-92361f002671",
                        "user_group_id": "Developer",
                        "name": "John Doe",
                        "email": "john.doe@domain.tld",
                        "preferred_language": "en",
                        "created_at": "2019-07-24 07:59:00",
                        "updated_at": "2019-07-24 07:59:00"
                    }
                }
            },
            "MeNotificationIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "2cace631-a11c-4887-8e90-be9337c40802",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Doe",
                                    "email": "john.doe@domain.tld",
                                    "created_at": {
                                        "date": "2019-07-24 07:59:00.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "b6c4f1b5-d1f0-413a-baef-32ff258b9a6b",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "509dd5c0-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Alan Smithee",
                                    "email": "alan.smithee@domain.tld",
                                    "created_at": {
                                        "date": "2019-07-24 07:59:01.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "bc7c8e99-7989-4657-ad78-c8a2f57a19ec",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "82b5da82-138c-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Mickey Mouse",
                                    "email": "mickey.mouse@domain.tld",
                                    "created_at": {
                                        "date": "2019-07-24 07:59:01.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "d66da278-8eb5-4589-b9af-14312d35503a",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Smith",
                                    "email": "john.smith@domain.tld",
                                    "created_at": {
                                        "date": "2019-07-24 07:59:01.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserGroupIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Developer",
                            "users_count": 1
                        },
                        {
                            "id": "End-User",
                            "users_count": 2
                        },
                        {
                            "id": "Support",
                            "users_count": 1
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 3,
                            "count": 3,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Developer",
                            "name": "John Doe",
                            "email": "john.doe@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-07-24 07:59:00",
                            "updated_at": "2019-07-24 07:59:00"
                        },
                        {
                            "id": "509dd5c0-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Support",
                            "name": "Alan Smithee",
                            "email": "alan.smithee@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "605c7610-1389-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "John Smith",
                            "email": "john.smith@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "82b5da82-138c-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "Mickey Mouse",
                            "email": "mickey.mouse@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "I18nLangIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "af",
                            "description": "Afrikaans"
                        },
                        {
                            "id": "af_NA",
                            "description": "Afrikaans (Namibia)"
                        },
                        {
                            "id": "af_ZA",
                            "description": "Afrikaans (South Africa)"
                        },
                        {
                            "id": "ak",
                            "description": "Akan"
                        },
                        {
                            "id": "ak_GH",
                            "description": "Akan (Ghana)"
                        },
                        {
                            "id": "am",
                            "description": "Amharic"
                        },
                        {
                            "id": "am_ET",
                            "description": "Amharic (Ethiopia)"
                        },
                        {
                            "id": "ar",
                            "description": "Arabic"
                        },
                        {
                            "id": "ar_AE",
                            "description": "Arabic (United Arab Emirates)"
                        },
                        {
                            "id": "ar_BH",
                            "description": "Arabic (Bahrain)"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 434,
                            "count": 10,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 44,
                            "links": {
                                "next": "http:\/\/ems-encrypt.local\/api\/i18nLang?page=2"
                            }
                        }
                    }
                }
            },
            "UserRoleIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Administrator"
                        },
                        {
                            "id": "Owner"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "name": "Sample Project",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCP\/QlnXGSgyqeF0YUJ60gBttSPtil+SbREWJGQnHW6DKOdDZee8N013CK0DxEoxNxMJ6w1NqwCw6B4Dc0t2JeMJz01Dyv\/T03x7ypZWPGCsAKHv9YTZnovCrhQt5dXmxuDt3sbA3IvOCR7dQCYW+EIJmT7kvh9Hn1yvkxTRR6seqBDy+ZwUHdqOsZepe0601V0bxyfJxk4P\/+TmbPNBD439GxX1vGsSqnJv4EuTYvSjZbqEnsDNpqys81bdin6Y00VBP+vLW7LpLcxs4R8\/+TKMRPtVgICBy1P3KwYVmLQMr1lRVk\/yYC4HTrTBOdJ+k9NoVu9s3aghbvZWaKgeGJ worker@ems-encrypt\n",
                            "authorization_webhook_url": "https:\/\/webhook.site\/8780c35b-7d20-4608-b217-abc3521075f8",
                            "authorization_webhook_auth_username": null,
                            "authorization_webhook_auth_password": null,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 09:38:40"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "MeProjectIndexExampleResponse": {
                "value": {
                    "data": [],
                    "meta": {
                        "pagination": {
                            "total": 0,
                            "count": 0,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserHasProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_role_id": "Owner",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "server_type_id": "HAProxy",
                            "name": "Sample Server",
                            "ip": "123.123.123.123",
                            "port": 22,
                            "login": "ems_encrypt",
                            "enabled": 1,
                            "position": 1,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "DeployCertificates"
                        },
                        {
                            "id": "FetchCertificatesStatus"
                        },
                        {
                            "id": "GenerateCertificate"
                        },
                        {
                            "id": "ImportCertificates"
                        },
                        {
                            "id": "LetsEncryptRevokeCertificate"
                        },
                        {
                            "id": "TestServerConnection"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 6,
                            "count": 6,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Apache"
                        },
                        {
                            "id": "HAProxy"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "0137e39c-e5cc-497d-8ee4-341d2795aa62",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "ems-encrypt-v4-test.be",
                            "order_id": {
                                "id": "f2cef3b2-1dc7-4dad-ba14-46784365e753",
                                "domain": "ems-encrypt-v4-test.be",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                                "status": "pending",
                                "expires": null,
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                                "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                                "certificate_url": null,
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDGfH6MGAdoZ+8i\n4iBcqGVxP0x+TXvRrcvEKf8Il7z7kJW+hYrUvY+fupBlN7L5VKmvl1SnUf9jAngZ\nRuevDzhO3okZkfKSxaws5epNT1yj0V0JNkweVdH7zEInxIEu8+Yzw71DEtxe6Lpk\nYceEguQd98zVPIlfSlNRIjV6UJ0Nzo3Q+fKZhQRolhQZulpIV6jdCUB27FY+ZoES\n2JBGiaR0mSaYHwjo6gkyFj5UhfPZq1IYf7+mQsgnzzpIkiChXlhQ+fwmmt6IhtzB\nU4nmGdFRqBKYMQmPkVV94fmp8UE805m10BhivUq5ryhBkgiK++twoFfGeQNKC2p0\nJ8X9qDOrAgMBAAECggEBALOuf+DS3+HkNNefXSyERVD\/vH+aJTzr2Er8uaNNugcC\nHI0c11E\/SYWPnqgChEKyIeqTVE8kK821roMzbQlM\/exoCDTdqnqz9+mtOS5Dadni\n7hYo0T+k8TLA9iKKAWg\/42V5DRxrNpO0mwfEfJm45Ek8ynE\/HBznbAVGsqLH12Vm\nvb0957Mzlf90uptYUTijteO1As0ykwJvcgyYxNjsFR56gQuet36h6dGqDaxRQ5zo\nZy3iOxyFch+sOi+SpmV76A7DHMdbtN4Ce96V+XRYmN2GbWPwsgnxtZCa1UUhanyt\nCWx27REsYN0vLwgd4rAbgtkuF1XZYvFVndswMVRDOAECgYEA9mIg8kSDiF5oUR1u\n5h\/eUcsH05eR88JY7fxZ2kbIT99LFe0g963pdtDiK5DlepGNi5vS6BQddedQUgAQ\nKA\/rayn6A8rNCIteH9047O0pfluBVRUDa4aumirAL2YFpYe9IHoo36m\/+Resx\/cm\n\/j3Cm\/9n43I8r5tkIvhHs7Hc6bsCgYEAzjvG5DpgcZoC+4dlxdQEUuVb1uiDHgte\nif3evT2uE6Pfvcsqg\/x7Axs\/0Bz4FfDvo5hAImpgWzR9ajwGbsxmKiM5OTYAqmH+\npmEglb9rbywkwpOeMhRUgvpp+wH1WDHPeWYuJ0ojw+vzaSpT7y15KNQmkiMlKRt+\nEN6uCFXJBtECgYEA3ZQUoyzAyhR1ZnW89ZK1gwO\/zygh54HiLm1jdW1w2nwrb9Wp\nb3XlX6itrpaJ+ngKPwLtYzAr6owT7RsHbLAcfWzr3xs017lW9fsjJdiIF449uwHB\n6KLgRd+qpTXwYBS6Hwod1kA4WNFU3yVD2SQ778V7bc6gCyIJpXV6Ln4H+d8CgYEA\nxPJ9G9NL6vEDTCWfYW75uhhivjdJj9WXsPwKTHqs1QC4WM2+ilEBQJQzOpGPsZRn\npblt9e\/UmQTliCBOnF0Ca9c7fJE\/zXbL8yPqNFebR43GhTLn7jdQBc0SjKzwGgtn\ncS3NgaPhx+Z6i8HqagzpGb6QHxsFD967Y2zkkf0qfyECgYEAmCpfJW99Z38Jc81m\n25aXxCptK+1ieNsH4EzUXAZhtifAhLbT1MeOUyEKrUl+h48B7JQKObpZnYyW2Awk\nWRUMG3Gnq\/x8zShboI2fAOzIHjztu\/ITl2T5vd+INoBUfKugimA+ER6Z41w6d0TY\nSfUaSijsSaRnUGt13xNbH060qlg=\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxnx+jBgHaGfvIuIgXKhl\ncT9Mfk170a3LxCn\/CJe8+5CVvoWK1L2Pn7qQZTey+VSpr5dUp1H\/YwJ4GUbnrw84\nTt6JGZHyksWsLOXqTU9co9FdCTZMHlXR+8xCJ8SBLvPmM8O9QxLcXui6ZGHHhILk\nHffM1TyJX0pTUSI1elCdDc6N0PnymYUEaJYUGbpaSFeo3QlAduxWPmaBEtiQRomk\ndJkmmB8I6OoJMhY+VIXz2atSGH+\/pkLIJ886SJIgoV5YUPn8JpreiIbcwVOJ5hnR\nUagSmDEJj5FVfeH5qfFBPNOZtdAYYr1Kua8oQZIIivvrcKBXxnkDSgtqdCfF\/agz\nqwIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": null,
                                "certificate_fullchain": null,
                                "fetched_at": "2019-07-24 10:02:18",
                                "created_at": "2019-07-24 10:02:19",
                                "updated_at": "2019-07-24 10:02:19"
                            },
                            "status": "FAILED",
                            "output": null,
                            "started_at": "2019-07-24 10:02:16",
                            "finished_at": null,
                            "created_at": "2019-07-24 10:02:08",
                            "updated_at": "2019-07-24 10:03:00"
                        },
                        {
                            "id": "36294de6-1a61-4fbc-9b41-ad93575e8e19",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "ems-encrypt-v4-test.be",
                            "order_id": null,
                            "status": "FAILED",
                            "output": null,
                            "started_at": null,
                            "finished_at": null,
                            "created_at": "2019-07-24 09:55:30",
                            "updated_at": "2019-07-24 09:57:03"
                        },
                        {
                            "id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "ems-encrypt-v4-test.be",
                            "order_id": {
                                "id": "3be52f59-eebb-4ec9-be9f-55491f597b7c",
                                "domain": "ems-encrypt-v4-test.be",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                                "status": "valid",
                                "expires": "2019-10-22 09:10:32",
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                                "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-08-23T10:10:08Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"valid\", \"validationRecord\": [{\"hostname\": \"ems-encrypt-v4-test.be\"}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"valid\", \"expires\": \"2019-08-23T10:10:30Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"valid\", \"validationRecord\": [{\"hostname\": \"ems-encrypt-v4-test.be\"}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                                "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/0382c3a71c0e68181ed091a4af81aeeae34e",
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDX\/yV09pJalDWO\nanil1juIbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIK\nWx96laD0cr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlF\nRzE0ONu8NxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3U\nA8Hx0PzBvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/Bf\nkgzPScgDrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOw\nukxBsCOXAgMBAAECggEBAMjmC9TKMj4Fc\/rOlQDKTf0JlJCkZgaNmoYRkUGNSb1A\n0V22NPbRgWlOyZjFZDxyTM8Mz\/k9oUCSElpHfvPpkBdNU6O8cleaxkNDVUniEaK3\n2cCPo2h5SNls8Jz7seJs6WJ6DkRvkRY8GhZRrTZBXD+niwSqJw8yuOHMt0VYA9XM\nxLY3uvg3d4SUMZNe1P2xs3Dh9bI3v\/iPPdh1ER\/I+5SJy0hJeD6uASr90WtLpHaV\ndNaQsEOLYK2aOWr1Wb4tnyDPf3hKhN4AKrDubjUzqmUjhTc18p+xJYAASL\/1zcW8\nPD1PUkY1Bani6+40QhqB7Pt9jLlafy8WcZ818ij0u0ECgYEA9UOihu\/3HSbniqIq\nGBLUMfzyJVc3psBQYt8vX9iNl9jKjGiyzjWzIP1qjLs7YvqQ39GSKHy9tTA0MK3z\nmm67+nowfvvPMpcpYtJ4+wACHb6fUb5Xf3wmAPlfX30aF3YCy\/ILdiDP2aWc7K\/q\nwTIqmGtsmLEfQzwojegJLtHZmakCgYEA4XOMGnpud4JKbCxKnLNm9LlhJDjgu5vP\nhySpM\/+nGVMo0ziE0zm1yVmtWxVXK8ZbLb8mIec+d72VrbGVv0fPlCy+eooMqIol\ntaVRP8GqNbK2qFOQKl8NHH0N+wWw4xPD8sxrJCdZkGdrVOEXp9jiZbuOaJLLQsVA\nnG9Fx8iKmz8CgYEA1avJwTL3ny8Qkwd6EqT8tlv+fSeBtUVgAvMba63WlU5qD277\nL4k6+GeuVtKbBzzxz\/vdEGa0Q1CudyZkzsrf+3ROIaKwvQtSI+TnPwyfy1gRpn5j\n7g2zci\/OtfrgK0ZFY3YIJC6rxZpxnwYXR56z2zvjTRcp\/EJBtndK4L4zi5kCgYAW\n1OnSYKXBSpuY2t9vgSejDwcMcQopVb0tlYPhNTnJ8ccHpQimj4iebIuG1uFuGHdx\naZNGCbIk1DlNTte4eGBIREPCCyr\/AoaRH73btBQ1vfSLlXLbJ6cfRHbe\/hOM25qT\ngyoyjh2e5ypSfT01DVzYKqdgZcVZ7Ln\/XbF2axPGZwKBgHTaqxtlBkoWK20bO\/Pl\nJBpQa0ohLN0SVBC1o42KdP1d2USUz8LRDSmWIjw2X6Vg+AnvR2c7AX0VX3MvLOSY\nWjZ+G63knptpi4m1yjpQ99anSkyr1PmV74W63zHc6IA+WuTUu5oS+LbtLhYJ\/1BT\nB3G\/APdPMVwndiod\/4UL568+\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1\/8ldPaSWpQ1jmp4pdY7\niGxCbr4573OQmrxqLsvAi0ZDsZ0zEsIQI4wqkRsEW9E0CD0Ch0oClFliClsfepWg\n9HK\/4fa4CIWTo2CDONynIvcIA81rBuP30D95pk+5KuH\/BekwqQ5aTV1JRUcxNDjb\nvDcUDxLY6hW0Y89A+GuvwkGvfFH\/Vq9cXh6FF5m3Q0b\/0Qqox8Xxo8191APB8dD8\nwbyB26oIt1GqOPw9Qlb8w0gxbmfrU3QN2tWsmktU2y5coobBPs6wv5fwX5IMz0nI\nA64UqE2KVNccqTwebAHilLRB963JH7k\/LN5q3PVgJrxSY28WQmrv8llTsLpMQbAj\nlwIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----",
                                "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                                "fetched_at": "2019-07-24 10:10:36",
                                "created_at": "2019-07-24 10:09:47",
                                "updated_at": "2019-07-24 10:10:36"
                            },
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-07-24 10:09:43",
                            "finished_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:09:36",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "ab7e3114-b245-4af3-a08c-fcf23005bbeb",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "ems-encrypt-v4-test.be",
                            "order_id": {
                                "id": "b694cdc2-fed6-4413-bfea-7488848f031f",
                                "domain": "ems-encrypt-v4-test.be",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                                "status": "pending",
                                "expires": null,
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"]",
                                "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                                "certificate_url": null,
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC29b9aFwhsYDVr\nDmVE577I661u3\/O1U0k\/myduFM6k+U9sLM9o6igTGLSgG5yzND+cYLTsvA6sI9ga\nBg\/wKJ6ub9qyQoQg\/vKBk\/ZUDBfGSnMwKiNmtZ1dUuBFexNB9vKmnxaklMDNPy+Q\nyK\/BbCT48WyM4VhvC\/zHeojzLp0TbvjZv65q2B4dhF3K8SuOjOWLxvMrqN+jhN9Q\nxCoElDYAi73+D5Em5hkYsystUZzf\/kYfRi74K952ed568ESfkCr1Y5f\/IOvbpl6v\nHjYsDCcuubU+iwMcvG4aqDIROUf8tNdG3xCFsRSRZWEr5C5hLIgwFi1aJ7Es8y8R\nNUASHmH1AgMBAAECggEARWHaR\/rWGes+NrQF2WSc6Crf4V0SWaAU9gcLo+ZGGy\/k\nW5x+p0WtHtjOnqz59seIm+\/cjK4gTk1lhTDpWGS\/EF2grNsmqjCknFkVH\/haB7ty\nBUDlneyfmaV1IUQ0IF7a1C8echlrKCqfCiPg6tPtDW7YgHBwjeQY3zjruHTj4lsc\n0HaLKy5c8MY6rg9L9A\/2+sGNNpOWwQprML970FvXGLDHRYQSF54xPJFyCVdU1zpI\nX4l+KR\/otNn8tMvZfxJA7\/sM\/ss13uGNCWz3yVi6RhwcyzaiW+dVhyBT92akkGg7\nqNXFs1fnQ7fbY0uHkS7vPa13A99TiWJFOjQD6lEqHQKBgQDys8UtsHa\/6RodZ5Kt\nAVDYDz8XvQBy8jStQT6\/XeBKx7r+rCwhNb8U5sGKHFHHZG5u0BT8yWS4hpiOQsyG\nXHX7XBMqFQQLFfN3ZOA8hWftkshp6Qvy\/XShsdIzmRFXJflaDRF2BCKTdeV+KuuT\nmM6RYO+xVa8h5sYqIwarZpWymwKBgQDA\/AKk4sizt\/jeVYaAaZMqBZrsf70Ab\/7e\nxL4NuzxDRAYS4qYpyb1QPyRk+Z+ikk3kAGJIBhxOAjqFVMzlZ7PpWLrQWSvhDKe1\nJaeIgZsNF35vAwPp7rTGJv8FLYWqfubKxIweCGfMgEy2YVLO4Cf8GO0P26gVD5W3\n3fIdfTN+rwKBgAi02Dr2XJwv0YcCgyl\/pZXKnjnMxupYs\/kPISAeTwB\/v76JEKA0\nXGF0kbbRo0Fi4e9JuacD1oAkG+7miI29XWIiAHH\/BQEczXoX\/U9Ofdbw8A2UlaAm\n5XszdNXzBMM6koJfe6PfLBpcHVp0UbUewzJF5vNWnoy5yZwTW5bkfDRHAoGAR+BU\nt8bDi7Q0m9Js0vz\/U8JcrkLxSO1tltjeFE0tJ7x5KqWBz8SUnwO1cWpLm4g0PHws\nHrkv55oK48fuvG6AYqOqiJj9r8c\/20cX+86RyjF65KvR1FoUuEyj5PDMfPDg0pqb\nuT\/WMSOD7tWWuvhfzBQYjzR3iMiSMbYXTAZqnH8CgYBYeSuFn78Vby6KzCrwCcWN\n2ItVvKTrcnGppEQ8\/L1MFr1pOVPY0JIsznvqC4ZSpqTRFo3Z70ZV5j\/NKgwgqnh1\nChlyixbDKDtTOXpzV3nxYkZtDNU1FtS4W3Rh+kJe7KuqlgTjXAXaDk3r7ShLSaaj\nHXCg0VeITpIsNgewcVG7ew==\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtvW\/WhcIbGA1aw5lROe+\nyOutbt\/ztVNJP5snbhTOpPlPbCzPaOooExi0oBucszQ\/nGC07LwOrCPYGgYP8Cie\nrm\/askKEIP7ygZP2VAwXxkpzMCojZrWdXVLgRXsTQfbypp8WpJTAzT8vkMivwWwk\n+PFsjOFYbwv8x3qI8y6dE2742b+uatgeHYRdyvErjozli8bzK6jfo4TfUMQqBJQ2\nAIu9\/g+RJuYZGLMrLVGc3\/5GH0Yu+CvednneevBEn5Aq9WOX\/yDr26Zerx42LAwn\nLrm1PosDHLxuGqgyETlH\/LTXRt8QhbEUkWVhK+QuYSyIMBYtWiexLPMvETVAEh5h\n9QIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": null,
                                "certificate_fullchain": null,
                                "fetched_at": "2019-07-24 09:49:33",
                                "created_at": "2019-07-24 09:49:35",
                                "updated_at": "2019-07-24 09:49:35"
                            },
                            "status": "FAILED",
                            "output": null,
                            "started_at": "2019-07-24 09:49:31",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:49:30",
                            "updated_at": "2019-07-24 09:50:15"
                        },
                        {
                            "id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "FetchCertificatesStatus",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": "Sample server deploy task sample...",
                            "started_at": "2018-11-25 10:45:35",
                            "finished_at": "2018-11-26 14:01:32",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "f00a88b1-a6e6-46d8-b2ca-c493f4f6366a",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "ems-encrypt-v4-test.be",
                            "order_id": {
                                "id": "bf2670f6-8712-4869-b273-928d2852ed5e",
                                "domain": "ems-encrypt-v4-test.be",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                                "status": "pending",
                                "expires": null,
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                                "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                                "certificate_url": null,
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDrjDFmkF7AEfiM\nDGD4dt8ctgVO0PXR2BuFo8Lib13DUje9Yz85t\/2F3Y3E0osec9QjLaMMNwD3zyLr\n31S4xpnEwhjnqr0bevDFSe+4snOnZFBuHq3ETIw0yhdDzj6W4htZE1AwRdVra7Hg\n2LUPGDqcSTmtRJ9eYEBzvAiEf0LfE6q5Mg2KsFnAzZUPBbrQjHtsi7OmSnzdBWjg\nsjwOgEavaj\/c4gS+Z5t\/ZllDF4aEJZS3j4YUU\/vbP2tmItXTHOgjCNO+x+XE9Ktw\nO60VBQdU09IxXJSSJfgpsoPk66IC3eI\/JEQ1UQIsDpXNjLy2I2dgyKp0dIz5616W\nt0KrykCtAgMBAAECggEAXvBHrQ49km7r3g7TOvI2pUzcQNNKcUUIesnxr\/CxOxu1\nablJ74qwPbd5\/73Y4vJOq8smL7MvybIMYkPG0x8BNWQCQ8X2qM\/ZobtWSvxqTyrI\nnEnzQe6UiGZ4EBVd9tS1ryZwqLRM\/BoRPQ47lBTw8rM08xh4n8Jt1\/gO+tCMdHqj\n06pQrQJWJ+eA\/qZ0VJRx8qlPvWp4htYGIUBC2PPBuMNnxFinC3l7rhnTuhfDtBgt\ncyRVjb+A1uRHOxmDQuQh\/y0QvmFfhjfSl8hHPmzqzenWuZMbXDyBFkAJ2BV+HdQG\nEmtmSsK2ydfJpKojLiC9Tc7IiBnEdSZS6+hMy1wjAQKBgQD6sFP0lZ7rYeQ9iFGJ\nmQUsyoQwHQD59Zt5QmLueGFGE4Hkk\/2HUoN2ZaBhMKXYr7ytC\/2mBcNRkTTqBaJb\nOH5YITpyyJfIU\/BfANfkpMe+pcgirBdD+sIA5BmadtJNnEVtoMauCs5mAbG8QkEW\nlP2C\/GxF1H+Nbv\/uQVc1ckS97QKBgQDwib5G8K2AOFe\/fqVa1OuKdRFxlKS81ihd\nKIkLOhXJ+SNmynkYVBzoBPh0GqrXW+hD0EOISksEQszlQ2GqkCiR7sMH5I7cE5Z1\nFb63u7SLep5IPo3E0VjE5eSU9UWvgdFHDgQvha\/66dxEt7au1uwAOHokf18V0vpS\n\/sUn6Jk1wQKBgQCnXpA+7KH0jx\/eQSQHFOXSmMcWhFbBi8wocj0w76gqLB396RxM\ne7ePlZw1J1Ci0fnLIwVPEevsimDkmaxi8N3RoyWtuuUzd281To\/VdHpze6WaGIFT\n\/pgGFkRNz2TrMhlcbwoW6toQWrM6eJWSKRj0mekD2jLqz6AJhxBde5QPpQKBgCWE\ndoc+FvG+2ADoUgY+25Y2+EeM9bz2cklFf0qe\/rMIBvuLbSPcSr3tuIrzdd4tWabq\nHv5tCBJcEPVZcyxVW96XLRhYD+hHrdoJUDv8LQbsUy\/VgetG89+SM\/r\/3qSnTOsW\nRpTa9z3dqBuXxAi1QQ4vwO1caIpQ4\/Z6AmpdHziBAoGAW7Z9oyGUBsbHMY7WXQqi\nRPbz+UrGGCvxXVcApCmpvG4QpiJYzRYXaOxqLDpsZ30k4ljebW+G447bLUFxHZA5\nCkiuoTn\/hYTJvQsQ2gLZPmtxrLeKoLBZZvKpfkaytARgtIzXjvilaYaSur81X8Nu\n2sjhWByi9zmSRQ4dZjJ\/bms=\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA64wxZpBewBH4jAxg+Hbf\nHLYFTtD10dgbhaPC4m9dw1I3vWM\/Obf9hd2NxNKLHnPUIy2jDDcA988i699UuMaZ\nxMIY56q9G3rwxUnvuLJzp2RQbh6txEyMNMoXQ84+luIbWRNQMEXVa2ux4Ni1Dxg6\nnEk5rUSfXmBAc7wIhH9C3xOquTINirBZwM2VDwW60Ix7bIuzpkp83QVo4LI8DoBG\nr2o\/3OIEvmebf2ZZQxeGhCWUt4+GFFP72z9rZiLV0xzoIwjTvsflxPSrcDutFQUH\nVNPSMVyUkiX4KbKD5OuiAt3iPyRENVECLA6VzYy8tiNnYMiqdHSM+etelrdCq8pA\nrQIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": null,
                                "certificate_fullchain": null,
                                "fetched_at": "2019-07-24 09:57:38",
                                "created_at": "2019-07-24 09:57:40",
                                "updated_at": "2019-07-24 09:57:40"
                            },
                            "status": "FAILED",
                            "output": null,
                            "started_at": "2019-07-24 09:57:31",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:57:28",
                            "updated_at": "2019-07-24 09:58:22"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 6,
                            "count": 6,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskLogIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "07efead2-1662-49f5-a76c-7e6ef49bc87b",
                            "server_id": null,
                            "task_id": "ab7e3114-b245-4af3-a08c-fcf23005bbeb",
                            "status": "RUNNING",
                            "output": "Step 1 \/ 6 : Create Account Order\n\nChanging certificate status to \"GENERATING\"...\nChecking Let's Encrypt account email...\nSetting Let's Encrypt order parameters...\nUse \"https:\/\/acme-v02.api.letsencrypt.org\" Let's Encrypt service end-point.\nTarget domain set to  \"ems-encrypt-v4-test.be\".\nUse \"rsa-2048\" key type.\nUse \"\" value for \"notBefore\".\nUse \"\" value for \"notAfter.\n\nContacting Let's Encrypt to create order...\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/directory\n[info] Let's Encrypt : HEAD https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-nonce\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-acct\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/acct\/50861688\n[info] Creating order for 'ems-encrypt-v4-test.be'.\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-order\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Created order for 'ems-encrypt-v4-test.be'.\nLet's Encrypt order url : https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027\n\nSaving order...\nOrder \"b694cdc2-fed6-4413-bfea-7488848f031f\" saved.\n\nUpdate task, setting order...\nDone.[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n",
                            "position": 2,
                            "started_at": "2019-07-24 09:49:32",
                            "finished_at": "2019-07-24 09:49:35",
                            "created_at": "2019-07-24 09:49:32",
                            "updated_at": "2019-07-24 09:50:15"
                        },
                        {
                            "id": "0ff4712a-7cee-4154-ab59-dcd61dccc77a",
                            "server_id": null,
                            "task_id": "36294de6-1a61-4fbc-9b41-ad93575e8e19",
                            "status": "FAILED",
                            "output": "App\\Jobs\\GenerateCertificateJob has been attempted too many times or run too long. The job may have previously timed out.",
                            "position": 1,
                            "started_at": "2019-07-24 09:57:03",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:57:03",
                            "updated_at": "2019-07-24 09:57:03"
                        },
                        {
                            "id": "28f14c75-ea23-434a-a4e9-de0ea477f743",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Step 1 \/ 6 : Create Account Order\n\nChanging certificate status to \"GENERATING\"...\nChecking Let's Encrypt account email...\nSetting Let's Encrypt order parameters...\nUse \"https:\/\/acme-v02.api.letsencrypt.org\" Let's Encrypt service end-point.\nTarget domain set to  \"ems-encrypt-v4-test.be\".\nUse \"rsa-2048\" key type.\nUse \"\" value for \"notBefore\".\nUse \"\" value for \"notAfter.\n\nContacting Let's Encrypt to create order...\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/directory\n[info] Let's Encrypt : HEAD https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-nonce\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-acct\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/acct\/50861688\n[info] Creating order for 'ems-encrypt-v4-test.be'.\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-order\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\n[info] Created order for 'ems-encrypt-v4-test.be'.\nLet's Encrypt order url : https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027\n\nSaving order...\nOrder \"3be52f59-eebb-4ec9-be9f-55491f597b7c\" saved.\n\nUpdate task, setting order...\nDone.[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\n[info] DNS challenge for 'ems-encrypt-v4-test.be' valid.\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\n[info] DNS challenge for 'ems-encrypt-v4-test.be' valid.\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\n[info] Order for 'ems-encrypt-v4-test.be' finalized.\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/0382c3a71c0e68181ed091a4af81aeeae34e\n[info] Certificate for 'ems-encrypt-v4-test.be' fetched\n",
                            "position": 2,
                            "started_at": "2019-07-24 10:09:43",
                            "finished_at": "2019-07-24 10:09:47",
                            "created_at": "2019-07-24 10:09:43",
                            "updated_at": "2019-07-24 10:10:34"
                        },
                        {
                            "id": "388122af-4df4-42c3-ae47-024da0acf68f",
                            "server_id": null,
                            "task_id": "f00a88b1-a6e6-46d8-b2ca-c493f4f6366a",
                            "status": "RUNNING",
                            "output": "Step 3 \/ 6 : Check Project Authorization With Webhook Url\n\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"kiM-GR_F4AvKEL8hs7bEGkgpMABmS9PpvcN7C1Zj9M0\" ...\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"HAdyJmHdMBHUEu4ybSfa6FjtsJZNDOQtOZSr5NULqTc\" ...\n",
                            "position": 4,
                            "started_at": "2019-07-24 09:57:41",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:57:41",
                            "updated_at": "2019-07-24 09:58:22"
                        },
                        {
                            "id": "3de3acec-4ff5-43e3-badd-969aa7b7ee3e",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Step 3 \/ 6 : Check Project Authorization With Webhook Url\n\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"kiM-GR_F4AvKEL8hs7bEGkgpMABmS9PpvcN7C1Zj9M0\" ...\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"HAdyJmHdMBHUEu4ybSfa6FjtsJZNDOQtOZSr5NULqTc\" ...\nAll authorizations are valid !\nDone.",
                            "position": 4,
                            "started_at": "2019-07-24 10:09:47",
                            "finished_at": "2019-07-24 10:10:32",
                            "created_at": "2019-07-24 10:09:47",
                            "updated_at": "2019-07-24 10:10:32"
                        },
                        {
                            "id": "412971e2-6321-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 1...",
                            "position": 1,
                            "started_at": "2020-01-27 10:45:35",
                            "finished_at": "2020-01-27 10:46:10",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "4f31008d-a2d3-4be1-bd58-4e13b2ceab07",
                            "server_id": null,
                            "task_id": "f00a88b1-a6e6-46d8-b2ca-c493f4f6366a",
                            "status": "RUNNING",
                            "output": "Step 2 \/ 6 : Place DNS Challenge Authorization\n\nChecking project authorization webhook url...\nFetching pending DNS authorizations...\nAuthorization \"ems-encrypt-v4-test.be\" found\nAuthorization \"ems-encrypt-v4-test.be\" found\nPlacing dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"kiM-GR_F4AvKEL8hs7bEGkgpMABmS9PpvcN7C1Zj9M0\" ...\nCalling webhook url \"https:\/\/webhook.site\/8780c35b-7d20-4608-b217-abc3521075f8\"\nWebhook called successfully.\nPlacing dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"HAdyJmHdMBHUEu4ybSfa6FjtsJZNDOQtOZSr5NULqTc\" ...\nCalling webhook url \"https:\/\/webhook.site\/8780c35b-7d20-4608-b217-abc3521075f8\"\nWebhook called successfully.\nDone.",
                            "position": 3,
                            "started_at": "2019-07-24 09:57:40",
                            "finished_at": "2019-07-24 09:57:41",
                            "created_at": "2019-07-24 09:57:40",
                            "updated_at": "2019-07-24 09:57:41"
                        },
                        {
                            "id": "505496f6-6321-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 3...",
                            "position": 3,
                            "started_at": "2020-02-28 14:01:27",
                            "finished_at": "2020-02-28 14:01:32",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "58149a48-6360-41ae-b25a-0bfc8c36bea4",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Step 5 \/ 6 : Fetch Certificate\n\nSaving order certificate data...\nOrder \"3be52f59-eebb-4ec9-be9f-55491f597b7c\" certificate data saved.\nChanging certificate status to \"GENERATED\"...\nDone.",
                            "position": 6,
                            "started_at": "2019-07-24 10:10:34",
                            "finished_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:10:34",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "6ae93cf9-bf2b-4bfa-8fc2-01159d7be52a",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Step 2 \/ 6 : Place DNS Challenge Authorization\n\nChecking project authorization webhook url...\nFetching pending DNS authorizations...\nAuthorization \"ems-encrypt-v4-test.be\" found\nAuthorization \"ems-encrypt-v4-test.be\" found\nPlacing dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"kiM-GR_F4AvKEL8hs7bEGkgpMABmS9PpvcN7C1Zj9M0\" ...\nCalling webhook url \"https:\/\/webhook.site\/8780c35b-7d20-4608-b217-abc3521075f8\"\nWebhook called successfully.\nPlacing dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"HAdyJmHdMBHUEu4ybSfa6FjtsJZNDOQtOZSr5NULqTc\" ...\nCalling webhook url \"https:\/\/webhook.site\/8780c35b-7d20-4608-b217-abc3521075f8\"\nWebhook called successfully.\nDone.",
                            "position": 3,
                            "started_at": "2019-07-24 10:09:47",
                            "finished_at": "2019-07-24 10:09:47",
                            "created_at": "2019-07-24 10:09:47",
                            "updated_at": "2019-07-24 10:09:47"
                        },
                        {
                            "id": "7060b42f-2349-4b9e-9943-86b99d01bc71",
                            "server_id": null,
                            "task_id": "ab7e3114-b245-4af3-a08c-fcf23005bbeb",
                            "status": "RUNNING",
                            "output": "Starting task\n",
                            "position": 1,
                            "started_at": "2019-07-24 09:49:31",
                            "finished_at": "2019-07-24 09:49:31",
                            "created_at": "2019-07-24 09:49:31",
                            "updated_at": "2019-07-24 09:49:31"
                        },
                        {
                            "id": "800d69f0-32eb-49b1-a207-307bf34886fd",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Checking Let's Encrypt account email...\nDone.",
                            "position": 7,
                            "started_at": "2019-07-24 10:10:34",
                            "finished_at": "2019-07-24 10:10:34",
                            "created_at": "2019-07-24 10:10:34",
                            "updated_at": "2019-07-24 10:10:34"
                        },
                        {
                            "id": "88c2208a-4d67-491d-a2a8-8aed58aa5dbf",
                            "server_id": null,
                            "task_id": "0137e39c-e5cc-497d-8ee4-341d2795aa62",
                            "status": "RUNNING",
                            "output": "Step 1 \/ 6 : Create Account Order\n\nChanging certificate status to \"GENERATING\"...\nChecking Let's Encrypt account email...\nSetting Let's Encrypt order parameters...\nUse \"https:\/\/acme-v02.api.letsencrypt.org\" Let's Encrypt service end-point.\nTarget domain set to  \"ems-encrypt-v4-test.be\".\nUse \"rsa-2048\" key type.\nUse \"\" value for \"notBefore\".\nUse \"\" value for \"notAfter.\n\nContacting Let's Encrypt to create order...\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/directory\n[info] Let's Encrypt : HEAD https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-nonce\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-acct\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/acct\/50861688\n[info] Creating order for 'ems-encrypt-v4-test.be'.\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-order\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\n[info] Created order for 'ems-encrypt-v4-test.be'.\nLet's Encrypt order url : https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027\n\nSaving order...\nOrder \"f2cef3b2-1dc7-4dad-ba14-46784365e753\" saved.\n\nUpdate task, setting order...\nDone.[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n[warning] DNS challenge for 'ems-encrypt-v4-test.be' tested locally, found invalid.\n",
                            "position": 2,
                            "started_at": "2019-07-24 10:02:16",
                            "finished_at": "2019-07-24 10:02:19",
                            "created_at": "2019-07-24 10:02:16",
                            "updated_at": "2019-07-24 10:03:00"
                        },
                        {
                            "id": "8965d40a-631c-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 2...",
                            "position": 2,
                            "started_at": "2020-02-28 09:20:12",
                            "finished_at": "2020-02-28 09:20:42",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        },
                        {
                            "id": "8a29c1ae-dac6-430b-a43e-9c0460c77f47",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Saving order...\nOrder \"3be52f59-eebb-4ec9-be9f-55491f597b7c\" saved.\nDone.",
                            "position": 10,
                            "started_at": "2019-07-24 10:10:36",
                            "finished_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:10:36",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "93cead1a-dc2b-489e-96a5-6be620cac24c",
                            "server_id": null,
                            "task_id": "ab7e3114-b245-4af3-a08c-fcf23005bbeb",
                            "status": "RUNNING",
                            "output": "Step 3 \/ 6 : Check Project Authorization With Webhook Url\n\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"HAdyJmHdMBHUEu4ybSfa6FjtsJZNDOQtOZSr5NULqTc\" ...\ndns-01 authorization type, waiting 20 seconds...\nChecking dns-01 authorization \"ems-encrypt-v4-test.be\" DNSDigest \"kiM-GR_F4AvKEL8hs7bEGkgpMABmS9PpvcN7C1Zj9M0\" ...\n",
                            "position": 4,
                            "started_at": "2019-07-24 09:49:35",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:49:35",
                            "updated_at": "2019-07-24 09:50:15"
                        },
                        {
                            "id": "965735ae-80ab-4f97-af72-42cd13b538c8",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Step 6 \/ 6 : Set existing certificate associations with servers \"TO_INSTALL\"\n\n0 installations found.\nDone.",
                            "position": 11,
                            "started_at": "2019-07-24 10:10:36",
                            "finished_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:10:36",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "aaed770c-12d5-4eec-a7ba-5d2eaf99c555",
                            "server_id": null,
                            "task_id": "ab7e3114-b245-4af3-a08c-fcf23005bbeb",
                            "status": "FAILED",
                            "output": "All authorizations are not valid yet.",
                            "position": 5,
                            "started_at": "2019-07-24 09:50:15",
                            "finished_at": null,
                            "created_at": "2019-07-24 09:50:15",
                            "updated_at": "2019-07-24 09:50:15"
                        },
                        {
                            "id": "aeee6127-d3d9-4eae-8769-692499c3df98",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Contacting Let's Encrypt to fetch order...\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/directory\n[info] Let's Encrypt : HEAD https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-nonce\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-acct\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/acct\/50861688\nLet's Encrypt order url to fetch : https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\nDone.",
                            "position": 9,
                            "started_at": "2019-07-24 10:10:34",
                            "finished_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:10:34",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "af844fc8-6170-4fd1-b023-2ee22a723f92",
                            "server_id": null,
                            "task_id": "7a0c69bc-8988-41e2-8a69-2b1d0c5c659a",
                            "status": "RUNNING",
                            "output": "Setting Let's Encrypt order parameters...\nUse \"https:\/\/acme-v02.api.letsencrypt.org\" Let's Encrypt service end-point.\n",
                            "position": 8,
                            "started_at": "2019-07-24 10:10:34",
                            "finished_at": null,
                            "created_at": "2019-07-24 10:10:34",
                            "updated_at": "2019-07-24 10:10:34"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 31,
                            "count": 20,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 2,
                            "links": {
                                "next": "http:\/\/ems-encrypt.local\/api\/taskLog?page=2"
                            }
                        }
                    }
                }
            },
            "CertificateIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "domain": "ems-encrypt-v4-test.be",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "GENERATED",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----",
                            "chain_pem": null,
                            "fullchain_pem": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "private_key_pem": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDX\/yV09pJalDWO\nanil1juIbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIK\nWx96laD0cr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlF\nRzE0ONu8NxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3U\nA8Hx0PzBvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/Bf\nkgzPScgDrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOw\nukxBsCOXAgMBAAECggEBAMjmC9TKMj4Fc\/rOlQDKTf0JlJCkZgaNmoYRkUGNSb1A\n0V22NPbRgWlOyZjFZDxyTM8Mz\/k9oUCSElpHfvPpkBdNU6O8cleaxkNDVUniEaK3\n2cCPo2h5SNls8Jz7seJs6WJ6DkRvkRY8GhZRrTZBXD+niwSqJw8yuOHMt0VYA9XM\nxLY3uvg3d4SUMZNe1P2xs3Dh9bI3v\/iPPdh1ER\/I+5SJy0hJeD6uASr90WtLpHaV\ndNaQsEOLYK2aOWr1Wb4tnyDPf3hKhN4AKrDubjUzqmUjhTc18p+xJYAASL\/1zcW8\nPD1PUkY1Bani6+40QhqB7Pt9jLlafy8WcZ818ij0u0ECgYEA9UOihu\/3HSbniqIq\nGBLUMfzyJVc3psBQYt8vX9iNl9jKjGiyzjWzIP1qjLs7YvqQ39GSKHy9tTA0MK3z\nmm67+nowfvvPMpcpYtJ4+wACHb6fUb5Xf3wmAPlfX30aF3YCy\/ILdiDP2aWc7K\/q\nwTIqmGtsmLEfQzwojegJLtHZmakCgYEA4XOMGnpud4JKbCxKnLNm9LlhJDjgu5vP\nhySpM\/+nGVMo0ziE0zm1yVmtWxVXK8ZbLb8mIec+d72VrbGVv0fPlCy+eooMqIol\ntaVRP8GqNbK2qFOQKl8NHH0N+wWw4xPD8sxrJCdZkGdrVOEXp9jiZbuOaJLLQsVA\nnG9Fx8iKmz8CgYEA1avJwTL3ny8Qkwd6EqT8tlv+fSeBtUVgAvMba63WlU5qD277\nL4k6+GeuVtKbBzzxz\/vdEGa0Q1CudyZkzsrf+3ROIaKwvQtSI+TnPwyfy1gRpn5j\n7g2zci\/OtfrgK0ZFY3YIJC6rxZpxnwYXR56z2zvjTRcp\/EJBtndK4L4zi5kCgYAW\n1OnSYKXBSpuY2t9vgSejDwcMcQopVb0tlYPhNTnJ8ccHpQimj4iebIuG1uFuGHdx\naZNGCbIk1DlNTte4eGBIREPCCyr\/AoaRH73btBQ1vfSLlXLbJ6cfRHbe\/hOM25qT\ngyoyjh2e5ypSfT01DVzYKqdgZcVZ7Ln\/XbF2axPGZwKBgHTaqxtlBkoWK20bO\/Pl\nJBpQa0ohLN0SVBC1o42KdP1d2USUz8LRDSmWIjw2X6Vg+AnvR2c7AX0VX3MvLOSY\nWjZ+G63knptpi4m1yjpQ99anSkyr1PmV74W63zHc6IA+WuTUu5oS+LbtLhYJ\/1BT\nB3G\/APdPMVwndiod\/4UL568+\n-----END PRIVATE KEY-----\n",
                            "lets_encrypt": 1,
                            "lets_encrypt_challenge_type": null,
                            "wildcard": 1,
                            "expires_at": "2019-10-22 09:10:32",
                            "created_at": "2019-07-24 09:49:30",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "domain": "www.test.com",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "NONE",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIGETCCBPmgAwIBAgISAzBCK9CPYfvBmggSZQHFOHQiMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODA5MjUwOTAyMDBaFw0x\nODEyMjQwOTAyMDBaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC\/LdXgRgUy5Wnq+QzE84j+4cZf\nGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1Tb7iFvRR6wu5\niXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR53\/CzYBVHheQ\n0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYPc6X6YRMZ26QP\nJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I3LkDnAu6IPc0\n2yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIRlAZfwgZbAgMB\nAAGjggMbMIIDFzAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFDc3TOiVRFduXVoZVzEL\nbg\/Xa68uMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejCB\/gYDVR0g\nBIH2MIHzMAgGBmeBDAECATCB5gYLKwYBBAGC3xMBAQEwgdYwJgYIKwYBBQUHAgEW\nGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIGrBggrBgEFBQcCAjCBngyBm1Ro\naXMgQ2VydGlmaWNhdGUgbWF5IG9ubHkgYmUgcmVsaWVkIHVwb24gYnkgUmVseWlu\nZyBQYXJ0aWVzIGFuZCBvbmx5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgQ2VydGlm\naWNhdGUgUG9saWN5IGZvdW5kIGF0IGh0dHBzOi8vbGV0c2VuY3J5cHQub3JnL3Jl\ncG9zaXRvcnkvMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYAb1N2rDHwMRnYmQCk\nURX\/dxUcEdkCwQApBo2yCJo32RMAAAFmEC2sNwAABAMARzBFAiBKRRXkQ\/qJEhaB\nbo5gvc+ZWuLChrxKsIZ6FbupJvliNQIhAMP2OzSUCCrA9FKkdg2z8gDiBSbSkCZu\n8w76VBsZlSgCAHYApFASaQVaFVReYhGrN7wQP2KuVXakXksXFEU+GyIQaiUAAAFm\nEC2rSAAABAMARzBFAiEAySvbq0S3xKvDtvb6DG0V88ak1I4unT4tlaidsInFLf4C\nIFE5hIBhpiGtsRkNQ+IL2o56SQASuNFVHx69hp1wT0KJMA0GCSqGSIb3DQEBCwUA\nA4IBAQBc5IgWdTRuyFmRITv1eOzpXs0hvjj04KBhnDNBaCQgtDidEgmI81089+g0\nzdCZyfi1hNlu7R\/\/0SJF\/58juU0vaGE\/b3FTyWUi9iRe9db8MUH76qbb7sEHa3j\/\nTlqsCYVKX3te5u7hGHyCchdDdGaVxBJD4NMt45qcQTo3SNCVWFCRa+aYXVzDPu1V\nTe7YtpmnawbqhfUTI3urdHaLk2FTJfSUPUi5mcqTBlnuzLoTXKXEvNr0UdZE\/Ia+\nJ5d2Ps6a9oA9lJfeXwyH1uSn1brkL3UUHd6DODsmz5rlAjqCxBTdIBYp0lw8QQ85\nytHr6b9PBaNWOHm3UAmiE\/bhcRVQ\n-----END CERTIFICATE-----\n\n",
                            "chain_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n\n",
                            "fullchain_pem": "-----BEGIN CERTIFICATE-----\nMIIGETCCBPmgAwIBAgISAzBCK9CPYfvBmggSZQHFOHQiMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xODA5MjUwOTAyMDBaFw0x\nODEyMjQwOTAyMDBaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC\/LdXgRgUy5Wnq+QzE84j+4cZf\nGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1Tb7iFvRR6wu5\niXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR53\/CzYBVHheQ\n0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYPc6X6YRMZ26QP\nJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I3LkDnAu6IPc0\n2yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIRlAZfwgZbAgMB\nAAGjggMbMIIDFzAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFDc3TOiVRFduXVoZVzEL\nbg\/Xa68uMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejCB\/gYDVR0g\nBIH2MIHzMAgGBmeBDAECATCB5gYLKwYBBAGC3xMBAQEwgdYwJgYIKwYBBQUHAgEW\nGmh0dHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIGrBggrBgEFBQcCAjCBngyBm1Ro\naXMgQ2VydGlmaWNhdGUgbWF5IG9ubHkgYmUgcmVsaWVkIHVwb24gYnkgUmVseWlu\nZyBQYXJ0aWVzIGFuZCBvbmx5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgQ2VydGlm\naWNhdGUgUG9saWN5IGZvdW5kIGF0IGh0dHBzOi8vbGV0c2VuY3J5cHQub3JnL3Jl\ncG9zaXRvcnkvMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHYAb1N2rDHwMRnYmQCk\nURX\/dxUcEdkCwQApBo2yCJo32RMAAAFmEC2sNwAABAMARzBFAiBKRRXkQ\/qJEhaB\nbo5gvc+ZWuLChrxKsIZ6FbupJvliNQIhAMP2OzSUCCrA9FKkdg2z8gDiBSbSkCZu\n8w76VBsZlSgCAHYApFASaQVaFVReYhGrN7wQP2KuVXakXksXFEU+GyIQaiUAAAFm\nEC2rSAAABAMARzBFAiEAySvbq0S3xKvDtvb6DG0V88ak1I4unT4tlaidsInFLf4C\nIFE5hIBhpiGtsRkNQ+IL2o56SQASuNFVHx69hp1wT0KJMA0GCSqGSIb3DQEBCwUA\nA4IBAQBc5IgWdTRuyFmRITv1eOzpXs0hvjj04KBhnDNBaCQgtDidEgmI81089+g0\nzdCZyfi1hNlu7R\/\/0SJF\/58juU0vaGE\/b3FTyWUi9iRe9db8MUH76qbb7sEHa3j\/\nTlqsCYVKX3te5u7hGHyCchdDdGaVxBJD4NMt45qcQTo3SNCVWFCRa+aYXVzDPu1V\nTe7YtpmnawbqhfUTI3urdHaLk2FTJfSUPUi5mcqTBlnuzLoTXKXEvNr0UdZE\/Ia+\nJ5d2Ps6a9oA9lJfeXwyH1uSn1brkL3UUHd6DODsmz5rlAjqCxBTdIBYp0lw8QQ85\nytHr6b9PBaNWOHm3UAmiE\/bhcRVQ\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n\n",
                            "private_key_pem": "-----BEGIN PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC\/LdXgRgUy5Wnq\n+QzE84j+4cZfGpebhVej0yMIm8VLtSE1lYv53T0mMiQFM9YalwTrA4RurF6LReT1\nTb7iFvRR6wu5iXzMXYdmmybF6lmkDcMkbHVp3ZCyPXmOnZnCM+NtrR76byzEL8GR\n53\/CzYBVHheQ0LQN5vyMqDZdR6h8jvI6tQiARWiT15AVWGU6GwCPBXGNezRSmyYP\nc6X6YRMZ26QPJalanygIkH2u4R0aJ1g4dXvix2vEO01t9w9lReeWwlZr3wXFtB3I\n3LkDnAu6IPc02yWagr5BLqwIgD8jvXPSULJrSZ4ju+Y92LQJGeMvod30pXiL6FIR\nlAZfwgZbAgMBAAECggEAExqsdbXpjRV5yR5MFV5UwUukfBp3LfZcNKXDqXePdqpK\nAEXKcBSYqLl3+gEdExkmR6nZUQnuhLJeV9kGCyfKEGmRiV\/g1bc+8ZTtgfeSL5+k\ncX5ZGVQnwnf8LrE3DT4MKwiSwOndKlmvWTot\/TR174uLRVBlvcHoWNHyZM3lW1Tt\nTSCNOA34orj9wvlpGCuoqq2Z8qRylpR7AJpKN21JDIMr\/xYH4XEevkn\/l5g9TK6Z\nW1iurEjU2cPRmqBWbiQvowmfoCo7WLemS5r3UdZ2IukLCtfTMT2lkcfKbLL9PEJU\n1SzGPQJHnJ4BOnpwNYi6ZJaVQV6sw1E0RtQiZtVhkQKBgQDhJCWIQrs\/Pso5wlFA\np0Cgyjz+5gd3zNSryI1Nm9s+WnZ80CFYAlsxrLgQKdGGRm7M64hxgncLZ2OLCn7k\nP5LJ80JX9U4JbAmC3pIWoTjKt26u9Qsk3+rEZsde24Q5io4DsjLZLIzemCQVavUz\n8ErB6daeg\/bEa9Te3jsrLRok4wKBgQDZYgKHcsXTJqC590bvWXqILKxvXGxM4XBC\n9iDos0oLPzXpq1+EEKcWUX8mqmX7aJROZoc\/5EMKnXitnUkkIaY5ikbbkGkOD1tK\niUyXfGQdbJWDjZtO5\/u9rVGZOcAtf984yxyA3wZekTKoMMGzJkIsrK35vqFoaIzN\nESqalV3KKQKBgQC18EEIYWzyCirgDEEfL0nR5jzufDOyw2tluvc9rWK6e95etM8N\nUTIi7YH9Rd4VVZu6q+giWp0bMRzHQt8SUrGr05JchFbg1FbHVFfYQ8ciQqQGbO3p\nia4tsyUQafLrkSV8pSfkStU4GNioGjw3EctH81FF3jyvtLhctlg4ZwVGowKBgQC7\nJvV0day5YG1KDgllMc0bhhKjAZhADGshS1QD46\/gxPf+iEuAoPGpdlqZCGUqsNvW\nL9FLgZLyhaaLGnoJAGti6JiemdLIhxIatuBZH3\/2ETEcBINsyK7km15AJAc\/ZPLi\nq4OLs\/eA3VMWmHt7aHnaioRyGtxNzo1CVAAw\/F22GQKBgQC38Sr1kXz61cQ0+2KR\n2PTwolkwfT1pPvIX0w5vaC3S+JLhRju0btASpxOtFywMiB+qfr1CscJf3UDiHXH2\nDPUoPG0nlUj2joMZHOdCxgpUsyhulIWscrudefgSOB\/aIz5HvQtcs73TKxM8VX38\nsnc5nkufzV1i3jnsg6Qq6cudcw==\n-----END PRIVATE KEY-----\n\n",
                            "lets_encrypt": 0,
                            "lets_encrypt_challenge_type": null,
                            "wildcard": 0,
                            "expires_at": "2018-11-28 01:01:31",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "OrderIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "3be52f59-eebb-4ec9-be9f-55491f597b7c",
                            "domain": "ems-encrypt-v4-test.be",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                            "status": "valid",
                            "expires": "2019-10-22 09:10:32",
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                            "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-08-23T10:10:08Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"valid\", \"validationRecord\": [{\"hostname\": \"ems-encrypt-v4-test.be\"}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"valid\", \"expires\": \"2019-08-23T10:10:30Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"valid\", \"validationRecord\": [{\"hostname\": \"ems-encrypt-v4-test.be\"}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                            "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/0382c3a71c0e68181ed091a4af81aeeae34e",
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDX\/yV09pJalDWO\nanil1juIbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIK\nWx96laD0cr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlF\nRzE0ONu8NxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3U\nA8Hx0PzBvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/Bf\nkgzPScgDrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOw\nukxBsCOXAgMBAAECggEBAMjmC9TKMj4Fc\/rOlQDKTf0JlJCkZgaNmoYRkUGNSb1A\n0V22NPbRgWlOyZjFZDxyTM8Mz\/k9oUCSElpHfvPpkBdNU6O8cleaxkNDVUniEaK3\n2cCPo2h5SNls8Jz7seJs6WJ6DkRvkRY8GhZRrTZBXD+niwSqJw8yuOHMt0VYA9XM\nxLY3uvg3d4SUMZNe1P2xs3Dh9bI3v\/iPPdh1ER\/I+5SJy0hJeD6uASr90WtLpHaV\ndNaQsEOLYK2aOWr1Wb4tnyDPf3hKhN4AKrDubjUzqmUjhTc18p+xJYAASL\/1zcW8\nPD1PUkY1Bani6+40QhqB7Pt9jLlafy8WcZ818ij0u0ECgYEA9UOihu\/3HSbniqIq\nGBLUMfzyJVc3psBQYt8vX9iNl9jKjGiyzjWzIP1qjLs7YvqQ39GSKHy9tTA0MK3z\nmm67+nowfvvPMpcpYtJ4+wACHb6fUb5Xf3wmAPlfX30aF3YCy\/ILdiDP2aWc7K\/q\nwTIqmGtsmLEfQzwojegJLtHZmakCgYEA4XOMGnpud4JKbCxKnLNm9LlhJDjgu5vP\nhySpM\/+nGVMo0ziE0zm1yVmtWxVXK8ZbLb8mIec+d72VrbGVv0fPlCy+eooMqIol\ntaVRP8GqNbK2qFOQKl8NHH0N+wWw4xPD8sxrJCdZkGdrVOEXp9jiZbuOaJLLQsVA\nnG9Fx8iKmz8CgYEA1avJwTL3ny8Qkwd6EqT8tlv+fSeBtUVgAvMba63WlU5qD277\nL4k6+GeuVtKbBzzxz\/vdEGa0Q1CudyZkzsrf+3ROIaKwvQtSI+TnPwyfy1gRpn5j\n7g2zci\/OtfrgK0ZFY3YIJC6rxZpxnwYXR56z2zvjTRcp\/EJBtndK4L4zi5kCgYAW\n1OnSYKXBSpuY2t9vgSejDwcMcQopVb0tlYPhNTnJ8ccHpQimj4iebIuG1uFuGHdx\naZNGCbIk1DlNTte4eGBIREPCCyr\/AoaRH73btBQ1vfSLlXLbJ6cfRHbe\/hOM25qT\ngyoyjh2e5ypSfT01DVzYKqdgZcVZ7Ln\/XbF2axPGZwKBgHTaqxtlBkoWK20bO\/Pl\nJBpQa0ohLN0SVBC1o42KdP1d2USUz8LRDSmWIjw2X6Vg+AnvR2c7AX0VX3MvLOSY\nWjZ+G63knptpi4m1yjpQ99anSkyr1PmV74W63zHc6IA+WuTUu5oS+LbtLhYJ\/1BT\nB3G\/APdPMVwndiod\/4UL568+\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1\/8ldPaSWpQ1jmp4pdY7\niGxCbr4573OQmrxqLsvAi0ZDsZ0zEsIQI4wqkRsEW9E0CD0Ch0oClFliClsfepWg\n9HK\/4fa4CIWTo2CDONynIvcIA81rBuP30D95pk+5KuH\/BekwqQ5aTV1JRUcxNDjb\nvDcUDxLY6hW0Y89A+GuvwkGvfFH\/Vq9cXh6FF5m3Q0b\/0Qqox8Xxo8191APB8dD8\nwbyB26oIt1GqOPw9Qlb8w0gxbmfrU3QN2tWsmktU2y5coobBPs6wv5fwX5IMz0nI\nA64UqE2KVNccqTwebAHilLRB963JH7k\/LN5q3PVgJrxSY28WQmrv8llTsLpMQbAj\nlwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----",
                            "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFfzCCBGegAwIBAgISA4LDpxwOaBge0JGkr4Gu6uNOMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTA3MjQwOTEwMzJaFw0x\nOTEwMjIwOTEwMzJaMCExHzAdBgNVBAMTFmVtcy1lbmNyeXB0LXY0LXRlc3QuYmUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX\/yV09pJalDWOanil1juI\nbEJuvjnvc5CavGouy8CLRkOxnTMSwhAjjCqRGwRb0TQIPQKHSgKUWWIKWx96laD0\ncr\/h9rgIhZOjYIM43Kci9wgDzWsG4\/fQP3mmT7kq4f8F6TCpDlpNXUlFRzE0ONu8\nNxQPEtjqFbRjz0D4a6\/CQa98Uf9Wr1xeHoUXmbdDRv\/RCqjHxfGjzX3UA8Hx0PzB\nvIHbqgi3Uao4\/D1CVvzDSDFuZ+tTdA3a1ayaS1TbLlyihsE+zrC\/l\/BfkgzPScgD\nrhSoTYpU1xypPB5sAeKUtEH3rckfuT8s3mrc9WAmvFJjbxZCau\/yWVOwukxBsCOX\nAgMBAAGjggKGMIICgjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUH\nAwEGCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFMArA84m3l8p3Ram\npl+G3xX98jM0MB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsG\nAQUFBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNl\nbmNyeXB0Lm9yZy8wOwYDVR0RBDQwMoIYKi5lbXMtZW5jcnlwdC12NC10ZXN0LmJl\nghZlbXMtZW5jcnlwdC12NC10ZXN0LmJlMEwGA1UdIARFMEMwCAYGZ4EMAQIBMDcG\nCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0dHA6Ly9jcHMubGV0c2VuY3J5\ncHQub3JnMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAKTxRllTIOWW6qlD8WAfU\nt2+\/WHopctykwwz05UVH9HgAAAFsI3YEqQAABAMARzBFAiB3TJKALnsiBp3IBBHP\noZ9dpn3T64opM9bRtzgdruSHugIhANQO3MTKYqLYLZoeDfMTk4n5vKt0fnaNB1gl\n9+vSFRUnAHcAb1N2rDHwMRnYmQCkURX\/dxUcEdkCwQApBo2yCJo32RMAAAFsI3YG\nMwAABAMASDBGAiEAgGk8uK\/Im0vHYLJIb\/Z89WImX364a2efRTpBjJU\/GoMCIQDn\ncPCKS5YVeQmIKCsEQuZIIoDqqS2ctm4AEm0axWbuMzANBgkqhkiG9w0BAQsFAAOC\nAQEAhJY9PvambrsIM5y3kDJvj64LR3vxmepPf4zS6byUaiDeI+gpWmy3K\/xiOYvl\nXRxbYH+fFaUiIVHGfIpM2ZUb51JwHvvpGxeS8XvUgzyrujRpEFGDkFiqbJXfSxWF\n75ZHyd+r5M6PycT3Hdp6f+FFFhNTulT9jJomJu98nm7gbvFJg+EKqW0s0WAPVfnc\nEGKT1xk0M+ZR1Wk4Xlc7R+eWnsXip9\/EoE0VYFBBJRo\/p\/U11URPi5M7ulngGbpF\n1ctUNo9oYUoQGO2vW0zlZtaKdQQkoSW6LF2knG05gEC7B3Gl93D0M4HD9dm8wy\/F\npLFMXfw31vQCBPrLGCuQrb6fzQ==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "fetched_at": "2019-07-24 10:10:36",
                            "created_at": "2019-07-24 10:09:47",
                            "updated_at": "2019-07-24 10:10:36"
                        },
                        {
                            "id": "b694cdc2-fed6-4413-bfea-7488848f031f",
                            "domain": "ems-encrypt-v4-test.be",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                            "status": "pending",
                            "expires": null,
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"]",
                            "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                            "certificate_url": null,
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC29b9aFwhsYDVr\nDmVE577I661u3\/O1U0k\/myduFM6k+U9sLM9o6igTGLSgG5yzND+cYLTsvA6sI9ga\nBg\/wKJ6ub9qyQoQg\/vKBk\/ZUDBfGSnMwKiNmtZ1dUuBFexNB9vKmnxaklMDNPy+Q\nyK\/BbCT48WyM4VhvC\/zHeojzLp0TbvjZv65q2B4dhF3K8SuOjOWLxvMrqN+jhN9Q\nxCoElDYAi73+D5Em5hkYsystUZzf\/kYfRi74K952ed568ESfkCr1Y5f\/IOvbpl6v\nHjYsDCcuubU+iwMcvG4aqDIROUf8tNdG3xCFsRSRZWEr5C5hLIgwFi1aJ7Es8y8R\nNUASHmH1AgMBAAECggEARWHaR\/rWGes+NrQF2WSc6Crf4V0SWaAU9gcLo+ZGGy\/k\nW5x+p0WtHtjOnqz59seIm+\/cjK4gTk1lhTDpWGS\/EF2grNsmqjCknFkVH\/haB7ty\nBUDlneyfmaV1IUQ0IF7a1C8echlrKCqfCiPg6tPtDW7YgHBwjeQY3zjruHTj4lsc\n0HaLKy5c8MY6rg9L9A\/2+sGNNpOWwQprML970FvXGLDHRYQSF54xPJFyCVdU1zpI\nX4l+KR\/otNn8tMvZfxJA7\/sM\/ss13uGNCWz3yVi6RhwcyzaiW+dVhyBT92akkGg7\nqNXFs1fnQ7fbY0uHkS7vPa13A99TiWJFOjQD6lEqHQKBgQDys8UtsHa\/6RodZ5Kt\nAVDYDz8XvQBy8jStQT6\/XeBKx7r+rCwhNb8U5sGKHFHHZG5u0BT8yWS4hpiOQsyG\nXHX7XBMqFQQLFfN3ZOA8hWftkshp6Qvy\/XShsdIzmRFXJflaDRF2BCKTdeV+KuuT\nmM6RYO+xVa8h5sYqIwarZpWymwKBgQDA\/AKk4sizt\/jeVYaAaZMqBZrsf70Ab\/7e\nxL4NuzxDRAYS4qYpyb1QPyRk+Z+ikk3kAGJIBhxOAjqFVMzlZ7PpWLrQWSvhDKe1\nJaeIgZsNF35vAwPp7rTGJv8FLYWqfubKxIweCGfMgEy2YVLO4Cf8GO0P26gVD5W3\n3fIdfTN+rwKBgAi02Dr2XJwv0YcCgyl\/pZXKnjnMxupYs\/kPISAeTwB\/v76JEKA0\nXGF0kbbRo0Fi4e9JuacD1oAkG+7miI29XWIiAHH\/BQEczXoX\/U9Ofdbw8A2UlaAm\n5XszdNXzBMM6koJfe6PfLBpcHVp0UbUewzJF5vNWnoy5yZwTW5bkfDRHAoGAR+BU\nt8bDi7Q0m9Js0vz\/U8JcrkLxSO1tltjeFE0tJ7x5KqWBz8SUnwO1cWpLm4g0PHws\nHrkv55oK48fuvG6AYqOqiJj9r8c\/20cX+86RyjF65KvR1FoUuEyj5PDMfPDg0pqb\nuT\/WMSOD7tWWuvhfzBQYjzR3iMiSMbYXTAZqnH8CgYBYeSuFn78Vby6KzCrwCcWN\n2ItVvKTrcnGppEQ8\/L1MFr1pOVPY0JIsznvqC4ZSpqTRFo3Z70ZV5j\/NKgwgqnh1\nChlyixbDKDtTOXpzV3nxYkZtDNU1FtS4W3Rh+kJe7KuqlgTjXAXaDk3r7ShLSaaj\nHXCg0VeITpIsNgewcVG7ew==\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtvW\/WhcIbGA1aw5lROe+\nyOutbt\/ztVNJP5snbhTOpPlPbCzPaOooExi0oBucszQ\/nGC07LwOrCPYGgYP8Cie\nrm\/askKEIP7ygZP2VAwXxkpzMCojZrWdXVLgRXsTQfbypp8WpJTAzT8vkMivwWwk\n+PFsjOFYbwv8x3qI8y6dE2742b+uatgeHYRdyvErjozli8bzK6jfo4TfUMQqBJQ2\nAIu9\/g+RJuYZGLMrLVGc3\/5GH0Yu+CvednneevBEn5Aq9WOX\/yDr26Zerx42LAwn\nLrm1PosDHLxuGqgyETlH\/LTXRt8QhbEUkWVhK+QuYSyIMBYtWiexLPMvETVAEh5h\n9QIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": null,
                            "certificate_fullchain": null,
                            "fetched_at": "2019-07-24 09:49:33",
                            "created_at": "2019-07-24 09:49:35",
                            "updated_at": "2019-07-24 09:49:35"
                        },
                        {
                            "id": "bf2670f6-8712-4869-b273-928d2852ed5e",
                            "domain": "ems-encrypt-v4-test.be",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                            "status": "pending",
                            "expires": null,
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                            "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                            "certificate_url": null,
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDrjDFmkF7AEfiM\nDGD4dt8ctgVO0PXR2BuFo8Lib13DUje9Yz85t\/2F3Y3E0osec9QjLaMMNwD3zyLr\n31S4xpnEwhjnqr0bevDFSe+4snOnZFBuHq3ETIw0yhdDzj6W4htZE1AwRdVra7Hg\n2LUPGDqcSTmtRJ9eYEBzvAiEf0LfE6q5Mg2KsFnAzZUPBbrQjHtsi7OmSnzdBWjg\nsjwOgEavaj\/c4gS+Z5t\/ZllDF4aEJZS3j4YUU\/vbP2tmItXTHOgjCNO+x+XE9Ktw\nO60VBQdU09IxXJSSJfgpsoPk66IC3eI\/JEQ1UQIsDpXNjLy2I2dgyKp0dIz5616W\nt0KrykCtAgMBAAECggEAXvBHrQ49km7r3g7TOvI2pUzcQNNKcUUIesnxr\/CxOxu1\nablJ74qwPbd5\/73Y4vJOq8smL7MvybIMYkPG0x8BNWQCQ8X2qM\/ZobtWSvxqTyrI\nnEnzQe6UiGZ4EBVd9tS1ryZwqLRM\/BoRPQ47lBTw8rM08xh4n8Jt1\/gO+tCMdHqj\n06pQrQJWJ+eA\/qZ0VJRx8qlPvWp4htYGIUBC2PPBuMNnxFinC3l7rhnTuhfDtBgt\ncyRVjb+A1uRHOxmDQuQh\/y0QvmFfhjfSl8hHPmzqzenWuZMbXDyBFkAJ2BV+HdQG\nEmtmSsK2ydfJpKojLiC9Tc7IiBnEdSZS6+hMy1wjAQKBgQD6sFP0lZ7rYeQ9iFGJ\nmQUsyoQwHQD59Zt5QmLueGFGE4Hkk\/2HUoN2ZaBhMKXYr7ytC\/2mBcNRkTTqBaJb\nOH5YITpyyJfIU\/BfANfkpMe+pcgirBdD+sIA5BmadtJNnEVtoMauCs5mAbG8QkEW\nlP2C\/GxF1H+Nbv\/uQVc1ckS97QKBgQDwib5G8K2AOFe\/fqVa1OuKdRFxlKS81ihd\nKIkLOhXJ+SNmynkYVBzoBPh0GqrXW+hD0EOISksEQszlQ2GqkCiR7sMH5I7cE5Z1\nFb63u7SLep5IPo3E0VjE5eSU9UWvgdFHDgQvha\/66dxEt7au1uwAOHokf18V0vpS\n\/sUn6Jk1wQKBgQCnXpA+7KH0jx\/eQSQHFOXSmMcWhFbBi8wocj0w76gqLB396RxM\ne7ePlZw1J1Ci0fnLIwVPEevsimDkmaxi8N3RoyWtuuUzd281To\/VdHpze6WaGIFT\n\/pgGFkRNz2TrMhlcbwoW6toQWrM6eJWSKRj0mekD2jLqz6AJhxBde5QPpQKBgCWE\ndoc+FvG+2ADoUgY+25Y2+EeM9bz2cklFf0qe\/rMIBvuLbSPcSr3tuIrzdd4tWabq\nHv5tCBJcEPVZcyxVW96XLRhYD+hHrdoJUDv8LQbsUy\/VgetG89+SM\/r\/3qSnTOsW\nRpTa9z3dqBuXxAi1QQ4vwO1caIpQ4\/Z6AmpdHziBAoGAW7Z9oyGUBsbHMY7WXQqi\nRPbz+UrGGCvxXVcApCmpvG4QpiJYzRYXaOxqLDpsZ30k4ljebW+G447bLUFxHZA5\nCkiuoTn\/hYTJvQsQ2gLZPmtxrLeKoLBZZvKpfkaytARgtIzXjvilaYaSur81X8Nu\n2sjhWByi9zmSRQ4dZjJ\/bms=\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA64wxZpBewBH4jAxg+Hbf\nHLYFTtD10dgbhaPC4m9dw1I3vWM\/Obf9hd2NxNKLHnPUIy2jDDcA988i699UuMaZ\nxMIY56q9G3rwxUnvuLJzp2RQbh6txEyMNMoXQ84+luIbWRNQMEXVa2ux4Ni1Dxg6\nnEk5rUSfXmBAc7wIhH9C3xOquTINirBZwM2VDwW60Ix7bIuzpkp83QVo4LI8DoBG\nr2o\/3OIEvmebf2ZZQxeGhCWUt4+GFFP72z9rZiLV0xzoIwjTvsflxPSrcDutFQUH\nVNPSMVyUkiX4KbKD5OuiAt3iPyRENVECLA6VzYy8tiNnYMiqdHSM+etelrdCq8pA\nrQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": null,
                            "certificate_fullchain": null,
                            "fetched_at": "2019-07-24 09:57:38",
                            "created_at": "2019-07-24 09:57:40",
                            "updated_at": "2019-07-24 09:57:40"
                        },
                        {
                            "id": "f2cef3b2-1dc7-4dad-ba14-46784365e753",
                            "domain": "ems-encrypt-v4-test.be",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"ems-encrypt-v4-test.be\", \"*.ems-encrypt-v4-test.be\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/772665027",
                            "status": "pending",
                            "expires": null,
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"*.ems-encrypt-v4-test.be\"}, {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\", \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"]",
                            "authorizations": "[{\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138359\", \"type\": \"tls-alpn-01\", \"token\": \"3Li3HbIs3Pj1wOtwU821_k5nfJq_cI7CGo52uwS7yEM\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138360\", \"type\": \"http-01\", \"token\": \"JrTJIVIawOTN6lxn6s2eflx2Qdz3wCypBrv0opbzkRs\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\/18667138361\", \"type\": \"dns-01\", \"token\": \"b0nbmoF0gtfeosvVhnmq_MakSNFZE0ZHQHMI28r0fiA\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/Ld8tKMAHKLrVdmgzr_Cf0iNeVkqXL6mc3BLgaJW8c4E\"}, {\"status\": \"pending\", \"expires\": \"2019-07-31T09:49:33Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\/18667138355\", \"type\": \"dns-01\", \"token\": \"ijlloZh-l46EYjf9HS0aK_mC4bG3pm9WKFa_0XTRFJw\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"ems-encrypt-v4-test.be\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/npUD9lBzn0rE-PB5s3OptxtPcR1V3xLKTdi2NW8vKvI\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/772665027",
                            "certificate_url": null,
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDGfH6MGAdoZ+8i\n4iBcqGVxP0x+TXvRrcvEKf8Il7z7kJW+hYrUvY+fupBlN7L5VKmvl1SnUf9jAngZ\nRuevDzhO3okZkfKSxaws5epNT1yj0V0JNkweVdH7zEInxIEu8+Yzw71DEtxe6Lpk\nYceEguQd98zVPIlfSlNRIjV6UJ0Nzo3Q+fKZhQRolhQZulpIV6jdCUB27FY+ZoES\n2JBGiaR0mSaYHwjo6gkyFj5UhfPZq1IYf7+mQsgnzzpIkiChXlhQ+fwmmt6IhtzB\nU4nmGdFRqBKYMQmPkVV94fmp8UE805m10BhivUq5ryhBkgiK++twoFfGeQNKC2p0\nJ8X9qDOrAgMBAAECggEBALOuf+DS3+HkNNefXSyERVD\/vH+aJTzr2Er8uaNNugcC\nHI0c11E\/SYWPnqgChEKyIeqTVE8kK821roMzbQlM\/exoCDTdqnqz9+mtOS5Dadni\n7hYo0T+k8TLA9iKKAWg\/42V5DRxrNpO0mwfEfJm45Ek8ynE\/HBznbAVGsqLH12Vm\nvb0957Mzlf90uptYUTijteO1As0ykwJvcgyYxNjsFR56gQuet36h6dGqDaxRQ5zo\nZy3iOxyFch+sOi+SpmV76A7DHMdbtN4Ce96V+XRYmN2GbWPwsgnxtZCa1UUhanyt\nCWx27REsYN0vLwgd4rAbgtkuF1XZYvFVndswMVRDOAECgYEA9mIg8kSDiF5oUR1u\n5h\/eUcsH05eR88JY7fxZ2kbIT99LFe0g963pdtDiK5DlepGNi5vS6BQddedQUgAQ\nKA\/rayn6A8rNCIteH9047O0pfluBVRUDa4aumirAL2YFpYe9IHoo36m\/+Resx\/cm\n\/j3Cm\/9n43I8r5tkIvhHs7Hc6bsCgYEAzjvG5DpgcZoC+4dlxdQEUuVb1uiDHgte\nif3evT2uE6Pfvcsqg\/x7Axs\/0Bz4FfDvo5hAImpgWzR9ajwGbsxmKiM5OTYAqmH+\npmEglb9rbywkwpOeMhRUgvpp+wH1WDHPeWYuJ0ojw+vzaSpT7y15KNQmkiMlKRt+\nEN6uCFXJBtECgYEA3ZQUoyzAyhR1ZnW89ZK1gwO\/zygh54HiLm1jdW1w2nwrb9Wp\nb3XlX6itrpaJ+ngKPwLtYzAr6owT7RsHbLAcfWzr3xs017lW9fsjJdiIF449uwHB\n6KLgRd+qpTXwYBS6Hwod1kA4WNFU3yVD2SQ778V7bc6gCyIJpXV6Ln4H+d8CgYEA\nxPJ9G9NL6vEDTCWfYW75uhhivjdJj9WXsPwKTHqs1QC4WM2+ilEBQJQzOpGPsZRn\npblt9e\/UmQTliCBOnF0Ca9c7fJE\/zXbL8yPqNFebR43GhTLn7jdQBc0SjKzwGgtn\ncS3NgaPhx+Z6i8HqagzpGb6QHxsFD967Y2zkkf0qfyECgYEAmCpfJW99Z38Jc81m\n25aXxCptK+1ieNsH4EzUXAZhtifAhLbT1MeOUyEKrUl+h48B7JQKObpZnYyW2Awk\nWRUMG3Gnq\/x8zShboI2fAOzIHjztu\/ITl2T5vd+INoBUfKugimA+ER6Z41w6d0TY\nSfUaSijsSaRnUGt13xNbH060qlg=\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxnx+jBgHaGfvIuIgXKhl\ncT9Mfk170a3LxCn\/CJe8+5CVvoWK1L2Pn7qQZTey+VSpr5dUp1H\/YwJ4GUbnrw84\nTt6JGZHyksWsLOXqTU9co9FdCTZMHlXR+8xCJ8SBLvPmM8O9QxLcXui6ZGHHhILk\nHffM1TyJX0pTUSI1elCdDc6N0PnymYUEaJYUGbpaSFeo3QlAduxWPmaBEtiQRomk\ndJkmmB8I6OoJMhY+VIXz2atSGH+\/pkLIJ886SJIgoV5YUPn8JpreiIbcwVOJ5hnR\nUagSmDEJj5FVfeH5qfFBPNOZtdAYYr1Kua8oQZIIivvrcKBXxnkDSgtqdCfF\/agz\nqwIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": null,
                            "certificate_fullchain": null,
                            "fetched_at": "2019-07-24 10:02:18",
                            "created_at": "2019-07-24 10:02:19",
                            "updated_at": "2019-07-24 10:02:19"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerHasCertificateIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": "www.test.com",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "NONE",
                            "status_updated_at": "2019-01-23 01:02:03",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "WebhookIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "be4c0590-943c-4c92-92a8-0e38882e279f",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "on_event": "test",
                            "url": "http:\/\/www.domain.tld\/callback",
                            "basic_auth_username": null,
                            "basic_auth_password": null,
                            "enabled": 1,
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "WebhookCallIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "c82dc389-2767-41dd-9568-87a91712ba7e",
                            "webhook_id": "be4c0590-943c-4c92-92a8-0e38882e279f",
                            "payload": "{\"foo\":\"bar\"}",
                            "status": "SUCCESS",
                            "response_code": 200,
                            "response_content": "",
                            "started_at": "2019-03-06 10:20:48",
                            "finished_at": "2019-03-06 10:21:02",
                            "created_at": "2019-07-24 07:59:01",
                            "updated_at": "2019-07-24 07:59:01"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiBearer": {
                "type": "http",
                "scheme": "bearer"
            },
            "apiOAuth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    },
                    "authorizationCode": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "tokenUrl": "\/oauth\/token",
                        "refreshUrl": "\/oauth\/token\/refresh",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "apiBearer": [
                "*"
            ]
        },
        {
            "apiOAuth": [
                "*"
            ]
        }
    ]
}
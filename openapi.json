{
    "openapi": "3.0.0",
    "info": {
        "title": "ems-encrypt",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https:\/\/www.ems-encrypt.com"
        }
    ],
    "paths": {
        "\/api\/me": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Get current user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification": {
            "get": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Current user notification list.",
                "description": "You can specify a GET parameter `read_status` to filter results.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeNotificationIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/all\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark all user notifications as read.",
                "operationId": "markAllAsRead",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NoContentResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/read": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as read.",
                "operationId": "markAsRead",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/notification\/{notificationId}\/unread": {
            "post": {
                "tags": [
                    "Manager:MeNotification"
                ],
                "summary": "Mark the specified user notification as unread.",
                "operationId": "markAsUnread",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "Notification UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Notification",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/NotificationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Show User group list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserGroupIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}": {
            "get": {
                "tags": [
                    "Manager:UserGroup"
                ],
                "summary": "Get specified User group.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserGroup",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserGroupResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "User list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Create and store new user.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password",
                                    "double_optin"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "double_optin": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}": {
            "get": {
                "tags": [
                    "Manager:User"
                ],
                "summary": "Get specified user.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Delete specified user.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:User",
                    "Resource:User"
                ],
                "summary": "Update a specified user.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_group_id",
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "user_group_id": {
                                        "enum": [
                                            "Developer",
                                            "Support",
                                            "End-User"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 100,
                                        "type": "string"
                                    },
                                    "email": {
                                        "maxLength": 150,
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "preferred_language": {
                                        "maxLength": 30,
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated User",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userGroup\/{userGroupId}\/user": {
            "get": {
                "tags": [
                    "Resource:UserGroup"
                ],
                "summary": "User group user list.",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "User Group ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A User list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Show i18n lang list.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/I18nLangIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Create and store new i18n lang.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "maxLength": 30,
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A I18nLangResponse",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/i18nLang\/{i18nLangId}": {
            "get": {
                "tags": [
                    "Manager:I18nLang"
                ],
                "summary": "Get specified i18n lang.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Delete specified i18n Lang.",
                "description": "<aside class=\"warning\">Avoid using this feature ! Check foreign keys constraints to remove dependent resources properly before.<\/aside>",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:I18nLang",
                    "Resource:I18nLang"
                ],
                "summary": "Update a i18n lang.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "i18nLangId",
                        "in": "path",
                        "description": "I18n lang UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "description"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated I18nLang",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/I18nLangResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Show user role list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserRoleIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userRole\/{userRoleId}": {
            "get": {
                "tags": [
                    "Manager:UserRole"
                ],
                "summary": "Get specified user role",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userRoleId",
                        "in": "path",
                        "description": "User Role ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserRole",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserRoleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Show project list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Create and store a new project",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}": {
            "get": {
                "tags": [
                    "Manager:Project"
                ],
                "summary": "Get specified project",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Delete specified project",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Project",
                    "Resource:Project"
                ],
                "summary": "Update a specified project",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_url": {
                                        "type": "string",
                                        "format": "url"
                                    },
                                    "authorization_webhook_auth_username": {
                                        "type": "string"
                                    },
                                    "authorization_webhook_auth_password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/me\/project": {
            "get": {
                "tags": [
                    "Manager:Me"
                ],
                "summary": "Current user project list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjects",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Project list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/MeProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "List of relationships between users and projects.",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/UserHasProjectIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Create and store a new user has project",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/userHasProject\/{userId},{projectId}": {
            "get": {
                "tags": [
                    "Manager:UserHasProject"
                ],
                "summary": "Get specified relationship between a user and a project.",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Delete specified relationship between a user and a project.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:UserHasProject",
                    "Resource:UserHasProject"
                ],
                "summary": "Update a specified relationship between a user and a project.",
                "description": "<aside class=\"notice\">Only one relationship per user\/project is allowed and only one user can be <code>Owner<\/code>of a project.<\/aside>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "project_id",
                                    "user_role_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "user_role_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated UserHasProject",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "User relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A UserHasProject list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/userHasProject": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Project relationship between users and projects list",
                "description": "You can specify a GET parameter `user_role_id` to filter results.",
                "operationId": "getProjectHasUsers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A SyncTask list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UserHasProjectListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Show server list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Create and store a new server",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}": {
            "get": {
                "tags": [
                    "Manager:Server"
                ],
                "summary": "Get specified server",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Delete specified server",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Manager:Server",
                    "Resource:Server"
                ],
                "summary": "Update a specified server",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "server_type_id",
                                    "name",
                                    "ip",
                                    "login",
                                    "enabled"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "server_type_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "ip": {
                                        "maxLength": 39,
                                        "type": "string"
                                    },
                                    "port": {
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "login": {
                                        "maxLength": 191,
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "position": {
                                        "minimum": 0,
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated Server",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/server": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Show task type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskType\/{taskTypeId}": {
            "get": {
                "tags": [
                    "Manager:TaskType"
                ],
                "summary": "Get specified task type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskTypeId",
                        "in": "path",
                        "description": "Task Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Show server type list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerTypeIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}": {
            "get": {
                "tags": [
                    "Manager:ServerType"
                ],
                "summary": "Get specified server type",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerType",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverType\/{serverTypeId}\/server": {
            "get": {
                "tags": [
                    "Resource:ServerType"
                ],
                "summary": "Server type server list",
                "operationId": "getServers",
                "parameters": [
                    {
                        "name": "serverTypeId",
                        "in": "path",
                        "description": "Server Type ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Server list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Show task list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Create and store a new task",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "project_id",
                                    "task_type_id"
                                ],
                                "properties": {
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "task_type_id": {
                                        "type": "string"
                                    },
                                    "server_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}": {
            "get": {
                "tags": [
                    "Manager:Task"
                ],
                "summary": "Get specified task",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Task",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Task",
                    "Resource:Task"
                ],
                "summary": "Delete specified task",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/server\/{serverId}\/task": {
            "get": {
                "tags": [
                    "Resource:Server"
                ],
                "summary": "Show server task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/user\/{userId}\/task": {
            "get": {
                "tags": [
                    "Resource:User"
                ],
                "summary": "Show user task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Show task log list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/TaskLogIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/taskLog\/{taskLogId}": {
            "get": {
                "tags": [
                    "Manager:TaskLog"
                ],
                "summary": "Get specified task log",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A TaskLog",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:TaskLog",
                    "Resource:TaskLog"
                ],
                "summary": "Delete specified task log",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "taskLogId",
                        "in": "path",
                        "description": "Task Log UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/task\/{taskId}\/taskLog": {
            "get": {
                "tags": [
                    "Resource:Task"
                ],
                "summary": "Show task task log list",
                "operationId": "getTaskLogs",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task log list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskLogListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Show certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/CertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Create and store a new certificate",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "required": [
                                    "domain",
                                    "project_id"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string"
                                    },
                                    "project_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "enum": [
                                            "NONE",
                                            "PENDING_GENERATION"
                                        ],
                                        "type": "string"
                                    },
                                    "cert_pem": {
                                        "type": "string"
                                    },
                                    "chain_pem": {
                                        "type": "string"
                                    },
                                    "fullchain_pem": {
                                        "type": "string"
                                    },
                                    "private_key_pem": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string",
                                        "description": "Must be a valid date according to the strtotime PHP function."
                                    },
                                    "lets_encrypt": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:Certificate"
                ],
                "summary": "Get specified certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Certificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager:Certificate",
                    "Resource:Certificate"
                ],
                "summary": "Delete specified certificate",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empty response"
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/project\/{projectId}\/certificate": {
            "get": {
                "tags": [
                    "Resource:Project"
                ],
                "summary": "Show project certificate list",
                "operationId": "getCertificates",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A certificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CertificateListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Show order list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/OrderIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/order\/{orderId}": {
            "get": {
                "tags": [
                    "Manager:Order"
                ],
                "summary": "Get specified order",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Order",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/order": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate order list",
                "operationId": "getOrders",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An order list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/OrderListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/certificate\/{domain},{projectId}\/task": {
            "get": {
                "tags": [
                    "Resource:Certificate"
                ],
                "summary": "Show certificate task list",
                "operationId": "getTasks",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A task list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/TaskListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Show server has certificate list",
                "operationId": "all",
                "parameters": [
                    {
                        "$ref": "#\/components\/parameters\/Include"
                    },
                    {
                        "$ref": "#\/components\/parameters\/Search"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationPage"
                    },
                    {
                        "$ref": "#\/components\/parameters\/PaginationLimit"
                    },
                    {
                        "$ref": "#\/components\/parameters\/OrderBy"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate list",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateListResponse"
                                },
                                "example": {
                                    "$ref": "#\/components\/examples\/ServerHasCertificateIndexExampleResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/api\/serverHasCertificate\/{serverId},{domain},{projectId}": {
            "get": {
                "tags": [
                    "Manager:ServerHasCertificate"
                ],
                "summary": "Get specified server has certificate",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "Server ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "path",
                        "description": "Domain",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ServerHasCertificate",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ServerHasCertificateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Field error"
                            },
                            "description": "Field errors"
                        },
                        "description": "Fields errors map"
                    },
                    "status_code": {
                        "type": "integer",
                        "description": "Error status code"
                    },
                    "debug": {
                        "required": [
                            "line",
                            "file",
                            "class",
                            "trace"
                        ],
                        "properties": {
                            "line": {
                                "type": "integer",
                                "description": "Code file line where error occurred"
                            },
                            "file": {
                                "type": "string",
                                "description": "Error file name"
                            },
                            "class": {
                                "type": "string",
                                "description": "Error class name"
                            },
                            "trace": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Error trace"
                                },
                                "description": "Error traces"
                            }
                        },
                        "description": "Debug mode extra info"
                    }
                }
            },
            "Pagination": {
                "required": [
                    "total",
                    "count",
                    "per_page",
                    "current_page",
                    "total_pages",
                    "links"
                ],
                "properties": {
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 434
                    },
                    "count": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "per_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "current_page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "total_pages": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32",
                        "example": 44
                    },
                    "links": {
                        "properties": {
                            "next": {
                                "type": "string",
                                "format": "url"
                            },
                            "previous": {
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                }
            },
            "Meta": {
                "properties": {
                    "pagination": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    }
                }
            },
            "I18nLang": {
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "I18nLangResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/I18nLang"
                    }
                }
            },
            "I18nLangListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/I18nLang"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "User": {
                "required": [
                    "id",
                    "user_group_id",
                    "name",
                    "email",
                    "preferred_language",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_group_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "preferred_language": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "UserResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/User"
                    }
                }
            },
            "UserListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "UserGroup": {
                "required": [
                    "id",
                    "users_count"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "users_count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UserGroupResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserGroup"
                    }
                }
            },
            "UserGroupListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserGroup"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Notification": {
                "required": [
                    "id",
                    "type",
                    "notifiable_id",
                    "notifiable_type",
                    "data",
                    "read_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string"
                    },
                    "notifiable_id": {
                        "type": "string"
                    },
                    "notifiable_type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "NotificationResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Notification"
                    }
                }
            },
            "NotificationListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Notification"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "NoContentResponse": {
                "description": "No Content"
            },
            "UserRole": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "UserRoleResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserRole"
                    }
                }
            },
            "UserRoleListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserRole"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Project": {
                "required": [
                    "id",
                    "name",
                    "public_key",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "search_engine_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "authorization_webhook_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Project"
                    }
                }
            },
            "ProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Project"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                },
                "example": {
                    "$ref": "#\/components\/examples\/ProjectIndexExampleResponse"
                }
            },
            "UserHasProject": {
                "required": [
                    "user_id",
                    "project_id",
                    "user_role_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_role_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "$ref": "#\/components\/schemas\/UserResponse"
                    },
                    "project": {
                        "$ref": "#\/components\/schemas\/ProjectResponse"
                    }
                }
            },
            "UserHasProjectResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/UserHasProject"
                    }
                }
            },
            "UserHasProjectListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/UserHasProject"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Server": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "server_type_id",
                    "name",
                    "ip",
                    "port",
                    "enabled",
                    "position",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_type_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "login": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Server"
                    }
                }
            },
            "ServerListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Server"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "TaskTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskType"
                    }
                }
            },
            "TaskTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerType": {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "ServerTypeResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerType"
                    }
                }
            },
            "ServerTypeListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerType"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Task": {
                "required": [
                    "id",
                    "project_id",
                    "user_id",
                    "task_type_id",
                    "server_id",
                    "domain",
                    "order_id",
                    "status",
                    "output",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_type_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "order_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Task"
                    }
                }
            },
            "TaskListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Task"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "TaskLog": {
                "required": [
                    "id",
                    "server_id",
                    "task_id",
                    "status",
                    "output",
                    "position",
                    "started_at",
                    "finished_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "task_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "COMPLETED",
                            "PENDING",
                            "RUNNING",
                            "FAILED",
                            "CANCELLED"
                        ],
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskLogResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/TaskLog"
                    }
                }
            },
            "TaskLogListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/TaskLog"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Certificate": {
                "required": [
                    "domain",
                    "project_id",
                    "status",
                    "cert_pem",
                    "chain_pem",
                    "fullchain_pem",
                    "private_key_pem",
                    "expires_at",
                    "lets_encrypt",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "PENDING_GENERATION",
                            "GENERATED",
                            "FAILED_GENERATION"
                        ],
                        "type": "string"
                    },
                    "cert_pem": {
                        "type": "string"
                    },
                    "chain_pem": {
                        "type": "string"
                    },
                    "fullchain_pem": {
                        "type": "string"
                    },
                    "private_key_pem": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lets_encrypt": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Certificate"
                    }
                }
            },
            "CertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Certificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "Order": {
                "required": [
                    "id",
                    "domain",
                    "project_id",
                    "key_type",
                    "key_size",
                    "domains",
                    "not_before",
                    "not_after",
                    "url",
                    "status",
                    "expires",
                    "identifiers",
                    "authorization_urls",
                    "authorizations",
                    "finalize_url",
                    "certificate_url",
                    "certificate_private_key",
                    "certificate_public_key",
                    "certificate_certificate",
                    "certificate_fullchain",
                    "fetched_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "key_type": {
                        "type": "string"
                    },
                    "key_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "domains": {
                        "type": "string",
                        "format": "json"
                    },
                    "not_before": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "not_after": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "expires": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "identifiers": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorization_urls": {
                        "type": "string",
                        "format": "json"
                    },
                    "authorizations": {
                        "type": "string",
                        "format": "json"
                    },
                    "finalize_url": {
                        "type": "string"
                    },
                    "certificate_url": {
                        "type": "string"
                    },
                    "certificate_private_key": {
                        "type": "string"
                    },
                    "certificate_public_key": {
                        "type": "string"
                    },
                    "certificate_certificate": {
                        "type": "string"
                    },
                    "certificate_fullchain": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OrderResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/Order"
                    }
                }
            },
            "OrderListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Order"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            },
            "ServerHasCertificate": {
                "required": [
                    "server_id",
                    "project_id",
                    "domain",
                    "status",
                    "status_updated_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "server_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "NONE",
                            "INSTALLED"
                        ],
                        "type": "string"
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ServerHasCertificateResponse": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "$ref": "#\/components\/schemas\/ServerHasCertificate"
                    }
                }
            },
            "ServerHasCertificateListResponse": {
                "required": [
                    "data",
                    "meta"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/ServerHasCertificate"
                        }
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/Meta"
                    }
                }
            }
        },
        "parameters": {
            "Include": {
                "name": "include",
                "in": "query",
                "description": "Include responses : {include1},{include2,{include3}[...]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "Search": {
                "name": "search",
                "in": "query",
                "description": "Search words",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "PaginationPage": {
                "name": "page",
                "in": "query",
                "description": "Pagination : Page number",
                "required": false,
                "schema": {
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                }
            },
            "PaginationLimit": {
                "name": "limit",
                "in": "query",
                "description": "Pagination : Maximum entries per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": 20
                }
            },
            "OrderBy": {
                "name": "order_by",
                "in": "query",
                "description": "Order by : {field},[asc|desc]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "examples": {
            "MeIndexExampleResponse": {
                "value": {
                    "data": {
                        "id": "41abdec2-1389-11e7-93ae-92361f002671",
                        "user_group_id": "Developer",
                        "name": "John Doe",
                        "email": "john.doe@domain.tld",
                        "preferred_language": "en",
                        "created_at": "2019-02-05 14:11:57",
                        "updated_at": "2019-02-05 14:11:57"
                    }
                }
            },
            "MeNotificationIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "3aa3e6df-1140-4241-936d-6a07201872f9",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Smith",
                                    "email": "john.smith@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-05 14:11:59.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        },
                        {
                            "id": "e3047364-620a-4f6c-941f-d91bc3ec00d0",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "82b5da82-138c-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Mickey Mouse",
                                    "email": "mickey.mouse@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-05 14:11:59.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        },
                        {
                            "id": "ef3af15f-3980-478e-82eb-3ab16785483e",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "509dd5c0-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "Alan Smithee",
                                    "email": "alan.smithee@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-05 14:11:59.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        },
                        {
                            "id": "75635c56-4728-4526-b2db-27417aef3853",
                            "type": "App\\Notifications\\UserCreatedNotification",
                            "notifiable_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "notifiable_type": "App\\Models\\User",
                            "data": {
                                "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                                "user": {
                                    "name": "John Doe",
                                    "email": "john.doe@domain.tld",
                                    "created_at": {
                                        "date": "2019-02-05 14:11:57.000000",
                                        "timezone_type": 3,
                                        "timezone": "UTC"
                                    }
                                }
                            },
                            "read_at": null,
                            "created_at": "2019-02-05 14:11:58",
                            "updated_at": "2019-02-05 14:11:58"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserGroupIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Developer",
                            "users_count": 1
                        },
                        {
                            "id": "End-User",
                            "users_count": 2
                        },
                        {
                            "id": "Support",
                            "users_count": 1
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 3,
                            "count": 3,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Developer",
                            "name": "John Doe",
                            "email": "john.doe@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-02-05 14:11:57",
                            "updated_at": "2019-02-05 14:11:57"
                        },
                        {
                            "id": "509dd5c0-1389-11e7-93ae-92361f002671",
                            "user_group_id": "Support",
                            "name": "Alan Smithee",
                            "email": "alan.smithee@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        },
                        {
                            "id": "605c7610-1389-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "John Smith",
                            "email": "john.smith@domain.tld",
                            "preferred_language": "en",
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        },
                        {
                            "id": "82b5da82-138c-11e7-93ae-92361f002671",
                            "user_group_id": "End-User",
                            "name": "Mickey Mouse",
                            "email": "mickey.mouse@domain.tld",
                            "preferred_language": "fr",
                            "created_at": "2019-02-05 14:11:59",
                            "updated_at": "2019-02-05 14:11:59"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 4,
                            "count": 4,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "I18nLangIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "af",
                            "description": "Afrikaans"
                        },
                        {
                            "id": "af_NA",
                            "description": "Afrikaans (Namibia)"
                        },
                        {
                            "id": "af_ZA",
                            "description": "Afrikaans (South Africa)"
                        },
                        {
                            "id": "ak",
                            "description": "Akan"
                        },
                        {
                            "id": "ak_GH",
                            "description": "Akan (Ghana)"
                        },
                        {
                            "id": "am",
                            "description": "Amharic"
                        },
                        {
                            "id": "am_ET",
                            "description": "Amharic (Ethiopia)"
                        },
                        {
                            "id": "ar",
                            "description": "Arabic"
                        },
                        {
                            "id": "ar_AE",
                            "description": "Arabic (United Arab Emirates)"
                        },
                        {
                            "id": "ar_BH",
                            "description": "Arabic (Bahrain)"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 434,
                            "count": 10,
                            "per_page": 10,
                            "current_page": 1,
                            "total_pages": 44,
                            "links": {
                                "next": "http:\/\/ems-encrypt.local\/api\/i18nLang?page=2"
                            }
                        }
                    }
                }
            },
            "UserRoleIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Administrator"
                        },
                        {
                            "id": "Owner"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "name": "Sample Project",
                            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYYjvfrtfjnDyXIIgc9jOezXWIFm0HW5iHRLpmAmEI0qhXfXlM8ZVW\/H8qpoYTUogylYpQrszNeHvqD02\/APtrrU8n2PhdVtSHLzRLdRhIrClR8CsZszDx9Rd+95iZ1L2v4QfwB4qcHCMAqNTmgB\/dUXHkvDoHcLPO63z6vFxUL4ZxmQkqvdLGMVjNUluJwWq7+gmZvC9t578FBo711xMVP5\/r4YjycxZ5KO+geCM+wwO06Y6itFIHnejt6U8u0sknTNxk+N27b4H0d0vqdMu5HTAajuIqx5oun1V+ko+PeNc2R\/3i7G7Wwx\/zYK51QzWJsG0Ee7pXAlFH4G4Sq+tv worker@ems-encrypt\n",
                            "authorization_webhook_url": "https:\/\/manager.e-monsite.com\/callbacks\/do\/emsencrypt",
                            "authorization_webhook_auth_username": null,
                            "authorization_webhook_auth_password": null,
                            "created_at": "2019-02-05 14:12:00",
                            "updated_at": "2019-02-05 14:12:57"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "MeProjectIndexExampleResponse": {
                "value": {
                    "data": [],
                    "meta": {
                        "pagination": {
                            "total": 0,
                            "count": 0,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "UserHasProjectIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_role_id": "Owner",
                            "created_at": "2019-02-05 14:12:00",
                            "updated_at": "2019-02-05 14:12:00"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 1,
                            "count": 1,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "605c7610-1389-11e7-93ae-92361f002671",
                            "server_type_id": "HAProxy",
                            "name": "Sample Server",
                            "ip": "123.123.123.123",
                            "port": 22,
                            "login": "ems_encrypt",
                            "enabled": 1,
                            "position": 1,
                            "created_at": "2019-02-05 14:12:00",
                            "updated_at": "2019-02-05 14:12:00"
                        },
                        {
                            "id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "server_type_id": "HAProxy",
                            "name": "91.198.105.214",
                            "ip": "91.198.105.214",
                            "port": 767,
                            "login": "ems-encrypt",
                            "enabled": 1,
                            "position": 2,
                            "created_at": "2019-02-05 14:21:16",
                            "updated_at": "2019-02-05 14:21:16"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "DeployCertificates"
                        },
                        {
                            "id": "FetchCertificatesStatus"
                        },
                        {
                            "id": "GenerateCertificate"
                        },
                        {
                            "id": "ImportCertificates"
                        },
                        {
                            "id": "LetsEncryptCheckOrderAuthorizations"
                        },
                        {
                            "id": "LetsEncryptCreateOrder"
                        },
                        {
                            "id": "LetsEncryptFetchCertificate"
                        },
                        {
                            "id": "LetsEncryptFinalizeOrder"
                        },
                        {
                            "id": "LetsEncryptRevokeCertificate"
                        },
                        {
                            "id": "PlaceHTTPChallengeAuthorization"
                        },
                        {
                            "id": "TestServerConnection"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 11,
                            "count": 11,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerTypeIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "Apache"
                        },
                        {
                            "id": "HAProxy"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "161284b9-2258-468c-83d9-78c61629c829",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "www.mon-site-web.org",
                            "order_id": {
                                "id": "95fa4847-22d2-4bbe-a121-cd80537a980a",
                                "domain": "www.mon-site-web.org",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"www.mon-site-web.org\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305411758",
                                "status": "valid",
                                "expires": "2019-05-08 08:47:35",
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"www.mon-site-web.org\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\"]",
                                "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-03-06T17:21:41Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844282\", \"type\": \"tls-alpn-01\", \"token\": \"K_41ToFmK5aF2kXeLNEGMO6AGRXgt2R6Ye2Nj06-wDc\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844283\", \"type\": \"dns-01\", \"token\": \"yXUAM538VcDds46xwaO4hBXRT9OyNWTlMM-vm4M0Gnk\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844284\", \"type\": \"http-01\", \"token\": \"vJEGWf-0Ma92I__wvIpZp_J3sjfmkrIKhg6LH_vSUqU\", \"status\": \"valid\", \"validationRecord\": [{\"url\": \"http:\/\/www.mon-site-web.org\/.well-known\/acme-challenge\/vJEGWf-0Ma92I__wvIpZp_J3sjfmkrIKhg6LH_vSUqU\", \"port\": \"80\", \"hostname\": \"www.mon-site-web.org\", \"addressUsed\": \"91.198.105.214\", \"addressesResolved\": [\"91.198.105.214\"]}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"www.mon-site-web.org\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/305411758",
                                "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/04f1dbfedb2937a6cbed5567e418fd6af6a8",
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDTTr\/thqcXA5el\nXEXhEggREFhKGCdm2Y+Giq07D2aEq02e1PBkktvi3BZVmjWBLYpKJ9+D6l4psnkT\nZPTele8vfQMHK8Cuxjjrno+num3jAnzEqUZf2Jv51247tv1SBOryjr4G0cJtsl82\n2oynYH+JMHWxLoLwPcjG5wA+FKCUj7U+LJoyZ5LVKaqx2iesqJ015fLD0bagS3KY\ntTejWi\/byVdu7ozfBZd\/ydHpysYCxjP4TcFhrKryxvl27Yt7xfwPakz6p1W3hAoq\nw6M+fA\/HfzLL4GmzlSQKLm0c6RRZ0w1UTUAspA+Kt6yzRPHdU8+q2uVMmHITrD5M\nDhrug2fNAgMBAAECggEBAKXR5ZFbGqJXwlgUqg2uXcAuSGqUu87dKeFV0A1Jz5SK\n7VWYGrGCAaXsOmagph4iA6Sf16oocA5erN7IWdSWamWkv4yQDBvbF+3mtyrThMoh\nOJIHmF88l2IfabTYq8ACdfE0jPDDCMWWtVtRdBEhC9Q3wBPzwPMQOQ\/FVQ5il4Uc\nN\/+2AGtjmwVNmDo420Q40tNY2SCSVCRnuMM4IzzJoDPvilGytqY+5V2e6dnAMtr\/\n+RkWcJR\/xp4BmVSfhFg67Mh2Af68OfoFsck8JPh8byTL2dpiOATMYyX+jUK21agO\nRJ7vNlufMqri0yuR8RvZgr4VPtQ44VmXzzbirpCQTk0CgYEA6WKUB0t+kWnvxOpO\nNGSaMOe4UJaA7ab\/mya0FWrUr9U2dBqTYiGgCBjdIEYaW2RfJUlSONVjVpFOOSOS\nU9U4j8s+D5ykIvP2+eEemL+64\/fbSA6nrQgA\/ljN3yw0dn4ALYpDA0Z1XQJP+UHG\nvaYpONSWylOX9pBV1RKdGJ85SSMCgYEA58iC57SrdXIDQmGXnuS9dwWHojMm9WQ3\n\/VI7ZpmuvuRGArU+HDR9x16AOMG6wde3kl6GVErB\/ACLS\/CnTqYkljTv31gT8yby\ntwW0M8Cgv31LK664m6mrkp5ok8mrbk1L7KQGnhw1PyS9B25DCkn\/wLoFvV+73dNx\nhpWnjsuPMk8CgYEAjYan+ZyATjINoj3r2r2++zUpgkUiPfttOWrI\/cvg2hfTg6iy\nA2ocn4xkW7PnO9CsGfJSmABe0xoec2vsykWcnSZEpjb5GfETrggkA8EQ1jlxkkrA\nx57460Ry44js74YNGZCkfpH1jcdfM+n9WPgwOzQ\/lMYIew6f3iwBc\/LqTD0CgYA6\nwTxVyhmwot8qo5yQvcE9e5xfRII6sFX1FDRUlN6UKz+IDjOZaMD9mfn86TcTTkCN\njQKWOYElBWpKLM3shPc\/UFoCDsy31YavWHXOrKTTBcrZXugTJZaFizxNQlD\/m\/6E\nFSxMRjBFOmXkjVHXONzpGP69e5ge6iucBzG7Y+R\/xwKBgHhQ0\/zrQGXIJzxLtQ41\n4V9+zq2FQYZbsh8WtWIPrDJFecPadxnYMYga34GjAREal6\/gaKO3hzZOhOnyzjTm\nCwxdxjjK7St5QdeF1y43qSZreuwxWHGT19G4ERjlZtZwimRs34DT3+f3QqLG9vp6\nWbR6pOpwcwl7ajk87KHVSeYW\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RII\nERBYShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXv\nL30DByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/\niTB1sS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov\n28lXbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwP\nx38yy+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNn\nzQIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----",
                                "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                                "fetched_at": "2019-02-07 09:47:42",
                                "created_at": "2019-02-07 09:47:37",
                                "updated_at": "2019-02-07 09:47:42"
                            },
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-02-07 09:47:32",
                            "finished_at": "2019-02-07 09:47:42",
                            "created_at": "2019-02-07 09:47:29",
                            "updated_at": "2019-02-07 09:47:42"
                        },
                        {
                            "id": "4b14536a-3c18-4bda-9902-e7428263d1dd",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "DeployCertificates",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "domain": null,
                            "order_id": null,
                            "status": "PENDING",
                            "output": null,
                            "started_at": null,
                            "finished_at": null,
                            "created_at": "2019-02-05 14:27:20",
                            "updated_at": "2019-02-05 14:27:20"
                        },
                        {
                            "id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "FetchCertificatesStatus",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": "Sample server deploy task sample...",
                            "started_at": "2018-11-25 10:45:35",
                            "finished_at": "2018-11-26 14:01:32",
                            "created_at": "2019-02-05 14:12:00",
                            "updated_at": "2019-02-05 14:12:00"
                        },
                        {
                            "id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "DeployCertificates",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-02-05 14:27:48",
                            "finished_at": "2019-02-05 14:27:51",
                            "created_at": "2019-02-05 14:27:39",
                            "updated_at": "2019-02-05 14:27:51"
                        },
                        {
                            "id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": "41abdec2-1389-11e7-93ae-92361f002671",
                            "task_type_id": "GenerateCertificate",
                            "server_id": null,
                            "domain": "www.test-thomas.xyz",
                            "order_id": {
                                "id": "de4fe8e0-82d6-47ee-be73-743ec28715c3",
                                "domain": "www.test-thomas.xyz",
                                "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                                "key_type": "rsa",
                                "key_size": 2048,
                                "domains": "[\"www.test-thomas.xyz\"]",
                                "not_before": null,
                                "not_after": null,
                                "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305412271",
                                "status": "valid",
                                "expires": "2019-05-08 08:48:15",
                                "identifiers": "[{\"type\": \"dns\", \"value\": \"www.test-thomas.xyz\"}]",
                                "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\"]",
                                "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-03-07T14:18:37Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287988\", \"type\": \"dns-01\", \"token\": \"0XUMXiFmU7VC55nIM-06wCjZ4xNxJbo5S6aZ6V7Fwkc\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287989\", \"type\": \"http-01\", \"token\": \"227jejLAY988Bc725geKjWj6Ug8hfib83k5B1XO7mkQ\", \"status\": \"valid\", \"validationRecord\": [{\"url\": \"http:\/\/www.test-thomas.xyz\/.well-known\/acme-challenge\/227jejLAY988Bc725geKjWj6Ug8hfib83k5B1XO7mkQ\", \"port\": \"80\", \"hostname\": \"www.test-thomas.xyz\", \"addressUsed\": \"91.198.105.214\", \"addressesResolved\": [\"91.198.105.214\"]}]}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287990\", \"type\": \"tls-alpn-01\", \"token\": \"vibyAaRgjsGJoOq2B9tVbfABOQ_7P4ERkfzIL9R4v5g\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"www.test-thomas.xyz\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\"}]",
                                "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/305412271",
                                "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/04d65dfce796a66137b30b138cdaa4e4fede",
                                "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDck0jSp0n9jDPH\nBNPmd8owbIUP9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/\nEWDFW0iOngAEPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUE\nUyJG8QaMbn2pbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QY\nT2I8pZ5xbWHGgaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tag\nPcCzvYSDxfVDyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8\nGCWtYjkRAgMBAAECggEADaQaK9TmsYR7K0K0LBuaaHY9oGgNRyzj2\/GYcSi\/rR+u\nZylRo9BaZXsveN5cI5kgVBQMGlxlZUrL00\/q0Sm9CfzheWHD8dPIIBFr1GbYtVV6\nUrml2f1SNP6U8zUhb6wRVE7rG0Vyrl\/GSkct5n8\/bW3j3Zd1sqoFAWZKWP0Q7Vga\nWnN9PNXOR\/a\/dn6TlBMtYdfI7z7SwzEJlOl2bgH4hkaK6kmbZY7IhUwUOES4TqXE\nb6Cw\/JpTDD5Xid\/z93zRAN9Wym9sftMvHQ3vM7qMDqJW6bvlnw85NLOmzTxmUUkK\n49JydWRmKPXEDsqomg1mzaQ5w0YtcEqrE1efmDuiQQKBgQD4gDBKnRZfqpQ9QTCL\nSmWWDnQEd6lLjBNQmKhgAK\/QiBKszafr9K8RFWNMQ4sL2PcBnUKW3xqdT9z03PfO\nAm+oZITrL3AYx+JKQ3WlSAu19TADgwufyTDM1ybreTKOudfoBCz6DEBCfukpRUCo\nelUb5xszDtOiMOnAA1UIcS3sGQKBgQDjO1sgwUXKXaLE+D7j54lnh1iSxuS\/mPe4\nwZeDHtESrjq7\/nBeIuNAWoHwO1Ek1LhM2BqPYiqFksx+xbHKgPVOXItU7tX9EACH\njAZOek0TRFgSuCl5rffcOEIos3CrtsCuN5dsR\/SRTF\/Lvb2OPVpiW8KvdPurtO3N\n1gqeaarTuQKBgC96\/r8i6KV6yDwz+nyCyIo1VMGNw5ElwIMDyBgfyXgEp9zQpqcU\n52ZSOdjWhvjKideLHrAJDOLF4af\/mHGKUZ9RJXxyYe66MmiSHyZnb6VipbvmDBCJ\ntoNNEKipTZmrtK8mLRnRwW1zJkW2b7ZBOYXNUIse6BzzT5ZajKLCTU3xAoGAAQiC\nD5IRaSwn01F1p7+jxk69Pl2dKKnfZn2q3LPFK5qTNcugYy0xb1d6A8ehRNOayu6o\noEJIAzd5qpHnjw4rD2IoWAiF\/JKYDgW6+ZxgwVesNtmThrQdzmiLFHhMaNt54NDr\n5Vgmaoq4XMrOE9l\/kbbtGbMkedFmy2rPvYypdDECgYEAmK2DPfL613Mp6e0j5+qo\n2iCzz1SMm2QKSOAW+\/dbuE+BIxcT295vq\/u4+lcaTBXUeG6aEdkdbpZe4+hJyteF\nEE8NdMCFHsV0QBW\/pN5szkou7967lbb\/4u423r4WdZDUkCTCVNIKG0975\/cyVCEC\nJCwiB5cREBk64d4mas5XfsA=\n-----END PRIVATE KEY-----\n",
                                "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3JNI0qdJ\/YwzxwTT5nfK\nMGyFD\/W\/ZgTdoPfgVvzU2f+XVC3H2z0XjKNGDSCXtxA6cFPkXD\/n2h1AfxFgxVtI\njp4ABD8\/M1WVPrE6qtXwudZqwilYV548Z2J3vnEaQ21FsVB++EQWOOAlBFMiRvEG\njG59qWyIUFNauooO\/L3c6EKEqmre6hRa5+CQvE\/LU\/aJLUZa7O7PVId0GE9iPKWe\ncW1hxoGgIW+1rpdTYe14VB\/OItFYXKOrWoHFgiofZO+jS8qPb9S0BPbWoD3As72E\ng8X1Q8kc78pf6aFDOUhvSZWAv9zMY+zLCX72b73wRb1RGjEIcb3KO392\/BglrWI5\nEQIDAQAB\n-----END PUBLIC KEY-----\n",
                                "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----",
                                "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                                "fetched_at": "2019-02-07 09:48:22",
                                "created_at": "2019-02-07 09:48:17",
                                "updated_at": "2019-02-07 09:48:22"
                            },
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-02-07 09:48:09",
                            "finished_at": "2019-02-07 09:48:22",
                            "created_at": "2019-02-07 09:48:08",
                            "updated_at": "2019-02-07 09:48:22"
                        },
                        {
                            "id": "e0ef74d9-93ae-4d04-b7b4-898bb053818d",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "TestServerConnection",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-02-05 14:21:52",
                            "finished_at": "2019-02-05 14:21:53",
                            "created_at": "2019-02-05 14:21:50",
                            "updated_at": "2019-02-05 14:21:53"
                        },
                        {
                            "id": "f7053e1b-e25d-423a-8530-d62714f845b0",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "user_id": null,
                            "task_type_id": "DeployCertificates",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "domain": null,
                            "order_id": null,
                            "status": "COMPLETED",
                            "output": null,
                            "started_at": "2019-02-05 14:22:07",
                            "finished_at": "2019-02-05 14:22:08",
                            "created_at": "2019-02-05 14:22:05",
                            "updated_at": "2019-02-05 14:22:08"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 7,
                            "count": 7,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "TaskLogIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "020222d3-ebd3-484b-b84b-3baf15b180da",
                            "server_id": null,
                            "task_id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "status": "RUNNING",
                            "output": "Contacting Let's Encrypt to fetch order...\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/directory\n[info] Let's Encrypt : HEAD https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-nonce\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/new-acct\n[info] Let's Encrypt : POST https:\/\/acme-v02.api.letsencrypt.org\/acme\/acct\/50861688\nLet's Encrypt order url to fetch : https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305412271\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305412271\n[info] Let's Encrypt : GET https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\nDone.",
                            "position": 9,
                            "started_at": "2019-02-07 09:48:20",
                            "finished_at": "2019-02-07 09:48:22",
                            "created_at": "2019-02-07 09:48:20",
                            "updated_at": "2019-02-07 09:48:22"
                        },
                        {
                            "id": "0a1bb7b3-39d6-4549-adda-096c3c87c333",
                            "server_id": null,
                            "task_id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "status": "COMPLETED",
                            "output": "Task finished\n",
                            "position": 11,
                            "started_at": "2019-02-07 09:48:22",
                            "finished_at": "2019-02-07 09:48:22",
                            "created_at": "2019-02-07 09:48:22",
                            "updated_at": "2019-02-07 09:48:22"
                        },
                        {
                            "id": "12711a4b-44ed-4dac-945e-67129f16fbad",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "f7053e1b-e25d-423a-8530-d62714f845b0",
                            "status": "RUNNING",
                            "output": "Filtering and updating server has certificate relationships...\n1 unknown domains found :\nwww.mon-site-web.org\n0 domains left to install found\nDone.",
                            "position": 7,
                            "started_at": "2019-02-05 14:22:08",
                            "finished_at": "2019-02-05 14:22:08",
                            "created_at": "2019-02-05 14:22:08",
                            "updated_at": "2019-02-05 14:22:08"
                        },
                        {
                            "id": "145edb16-dea8-4cc3-a1e2-35df11b91d62",
                            "server_id": null,
                            "task_id": "161284b9-2258-468c-83d9-78c61629c829",
                            "status": "RUNNING",
                            "output": "Setting Let's Encrypt order parameters...\nUse \"https:\/\/acme-v02.api.letsencrypt.org\" Let's Encrypt service end-point.\n",
                            "position": 8,
                            "started_at": "2019-02-07 09:47:40",
                            "finished_at": null,
                            "created_at": "2019-02-07 09:47:40",
                            "updated_at": "2019-02-07 09:47:40"
                        },
                        {
                            "id": "19aee516-5f04-4588-a2e2-0447b3b28296",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Checking task data...\nDone.",
                            "position": 2,
                            "started_at": "2019-02-05 14:27:48",
                            "finished_at": "2019-02-05 14:27:48",
                            "created_at": "2019-02-05 14:27:48",
                            "updated_at": "2019-02-05 14:27:48"
                        },
                        {
                            "id": "1f6cab45-02e6-4e28-804f-922758d302cb",
                            "server_id": null,
                            "task_id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "status": "RUNNING",
                            "output": "Step 4 \/ 5 : Finalize Order\n\nOrder \"de4fe8e0-82d6-47ee-be73-743ec28715c3\" finalized.\nDone.",
                            "position": 5,
                            "started_at": "2019-02-07 09:48:17",
                            "finished_at": "2019-02-07 09:48:20",
                            "created_at": "2019-02-07 09:48:17",
                            "updated_at": "2019-02-07 09:48:20"
                        },
                        {
                            "id": "22589432-e8da-4573-abfc-67969d78e8ac",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Retrieving domains in result output...\n1 domains found\nDone.",
                            "position": 6,
                            "started_at": "2019-02-05 14:27:49",
                            "finished_at": "2019-02-05 14:27:49",
                            "created_at": "2019-02-05 14:27:49",
                            "updated_at": "2019-02-05 14:27:49"
                        },
                        {
                            "id": "28d3469c-4748-4628-90f6-9e9759d9b578",
                            "server_id": null,
                            "task_id": "161284b9-2258-468c-83d9-78c61629c829",
                            "status": "RUNNING",
                            "output": "Starting task\n",
                            "position": 1,
                            "started_at": "2019-02-07 09:47:33",
                            "finished_at": "2019-02-07 09:47:33",
                            "created_at": "2019-02-07 09:47:33",
                            "updated_at": "2019-02-07 09:47:33"
                        },
                        {
                            "id": "2cc37b1e-2146-4ffb-9cd3-42338d2db610",
                            "server_id": null,
                            "task_id": "161284b9-2258-468c-83d9-78c61629c829",
                            "status": "COMPLETED",
                            "output": "Task finished\n",
                            "position": 11,
                            "started_at": "2019-02-07 09:47:42",
                            "finished_at": "2019-02-07 09:47:42",
                            "created_at": "2019-02-07 09:47:42",
                            "updated_at": "2019-02-07 09:47:42"
                        },
                        {
                            "id": "33ab32ec-b5ee-47d8-91da-a70a88d23574",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Filtering and updating server has certificate relationships...\n0 unknown domains found :\n1 domains left to install found\nDone.",
                            "position": 7,
                            "started_at": "2019-02-05 14:27:49",
                            "finished_at": "2019-02-05 14:27:49",
                            "created_at": "2019-02-05 14:27:49",
                            "updated_at": "2019-02-05 14:27:49"
                        },
                        {
                            "id": "36f05f2d-9ef5-4a00-97be-5f8c684a14c8",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Installing remaining server has certificate relationships certificates pem files...\nSending www.test-thomas.xyz.pem file...\n\nDone.",
                            "position": 8,
                            "started_at": "2019-02-05 14:27:49",
                            "finished_at": "2019-02-05 14:27:49",
                            "created_at": "2019-02-05 14:27:49",
                            "updated_at": "2019-02-05 14:27:49"
                        },
                        {
                            "id": "38cd094b-92fd-4a38-bc10-f36cf1edc58a",
                            "server_id": null,
                            "task_id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "status": "RUNNING",
                            "output": "Checking Let's Encrypt account email...\nDone.",
                            "position": 7,
                            "started_at": "2019-02-07 09:48:20",
                            "finished_at": "2019-02-07 09:48:20",
                            "created_at": "2019-02-07 09:48:20",
                            "updated_at": "2019-02-07 09:48:20"
                        },
                        {
                            "id": "3d73d86c-67cc-4c58-99b4-4a6f5509a8b2",
                            "server_id": null,
                            "task_id": "dbc4a6af-aee0-4410-9ace-c5e2a24b2018",
                            "status": "RUNNING",
                            "output": "Step 3 \/ 5 : Check Project Authorization With Webhook Url\n\nAll authorizations are valid !\nDone.",
                            "position": 4,
                            "started_at": "2019-02-07 09:48:17",
                            "finished_at": "2019-02-07 09:48:17",
                            "created_at": "2019-02-07 09:48:17",
                            "updated_at": "2019-02-07 09:48:17"
                        },
                        {
                            "id": "401f0fb4-fc2e-44b2-ab51-a83928eaea70",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Getting the server certificates relationships...\n2 found\nDone.",
                            "position": 3,
                            "started_at": "2019-02-05 14:27:48",
                            "finished_at": "2019-02-05 14:27:48",
                            "created_at": "2019-02-05 14:27:48",
                            "updated_at": "2019-02-05 14:27:48"
                        },
                        {
                            "id": "412971e2-6321-11e8-adc0-fa7ae01bbebc",
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "task_id": "b7b39852-6334-11e8-adc0-fa7ae01bbebc",
                            "status": "COMPLETED",
                            "output": "server log test 1...",
                            "position": 1,
                            "started_at": "2020-01-27 10:45:35",
                            "finished_at": "2020-01-27 10:46:10",
                            "created_at": "2019-02-05 14:12:00",
                            "updated_at": "2019-02-05 14:12:00"
                        },
                        {
                            "id": "43d89614-36ea-4358-8140-b4eac7ab64ec",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "COMPLETED",
                            "output": "Task finished\n",
                            "position": 12,
                            "started_at": "2019-02-05 14:27:51",
                            "finished_at": "2019-02-05 14:27:51",
                            "created_at": "2019-02-05 14:27:51",
                            "updated_at": "2019-02-05 14:27:51"
                        },
                        {
                            "id": "45174858-a72a-4c5e-9418-60b8d12c0dcb",
                            "server_id": null,
                            "task_id": "161284b9-2258-468c-83d9-78c61629c829",
                            "status": "RUNNING",
                            "output": "Step 5 \/ 5 : Fetch Certificate\n\nSaving order certificate data...\nOrder \"95fa4847-22d2-4bbe-a121-cd80537a980a\" certificate data saved.\nChanging certificate status to \"GENERATED\"...\nDone.",
                            "position": 6,
                            "started_at": "2019-02-07 09:47:40",
                            "finished_at": "2019-02-07 09:47:42",
                            "created_at": "2019-02-07 09:47:40",
                            "updated_at": "2019-02-07 09:47:42"
                        },
                        {
                            "id": "47e3683f-5827-4081-ad97-281b5f46f806",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "d1e24e9c-c68a-4a7f-93bf-6200f29fd24e",
                            "status": "RUNNING",
                            "output": "Preparing server \"91.198.105.214\" (ems-encrypt@91.198.105.214:767) ...\n# Run script over SSH\n\nsudo ssh -o CheckHostIP=no \\\n    -o IdentitiesOnly=yes \\\n    -o StrictHostKeyChecking=no \\\n    -o PasswordAuthentication=no \\\n    -o IdentityFile=\/home\/vagrant\/ems-encrypt-tmp-keys\/sshkeydTUwRr \\\n    -p 767 ems-encrypt@91.198.105.214 'bash -s' << 'EOF'\n        # Turn on quit on non-zero exit\n        set -e\n        # Prepare HAProxy server\n\n# Ensure the certificates directory exists\nmkdir -p ~\/certificates\nchmod 744 ~\/certificates\n\n# Ensure the certificates-list file exists\ntouch certificates-list\nchmod 744 ~\/certificates-list\nEOF\n\nDone.",
                            "position": 4,
                            "started_at": "2019-02-05 14:27:48",
                            "finished_at": "2019-02-05 14:27:48",
                            "created_at": "2019-02-05 14:27:48",
                            "updated_at": "2019-02-05 14:27:48"
                        },
                        {
                            "id": "4c822f54-ca78-4dab-ad1e-9a74bbafb157",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "f7053e1b-e25d-423a-8530-d62714f845b0",
                            "status": "RUNNING",
                            "output": "Starting task\n",
                            "position": 1,
                            "started_at": "2019-02-05 14:22:07",
                            "finished_at": "2019-02-05 14:22:07",
                            "created_at": "2019-02-05 14:22:07",
                            "updated_at": "2019-02-05 14:22:07"
                        },
                        {
                            "id": "4f3b8a7a-44de-467f-be44-d1ee78b79b18",
                            "server_id": "d0412712-1d7c-4c28-b6b0-a84b1c88d2f4",
                            "task_id": "f7053e1b-e25d-423a-8530-d62714f845b0",
                            "status": "RUNNING",
                            "output": "Checking task data...\nDone.",
                            "position": 2,
                            "started_at": "2019-02-05 14:22:07",
                            "finished_at": "2019-02-05 14:22:07",
                            "created_at": "2019-02-05 14:22:07",
                            "updated_at": "2019-02-05 14:22:07"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 50,
                            "count": 20,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 3,
                            "links": {
                                "next": "http:\/\/ems-encrypt.local\/api\/taskLog?page=2"
                            }
                        }
                    }
                }
            },
            "CertificateIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "domain": "www.mon-site-web.org",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "GENERATED",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----",
                            "chain_pem": null,
                            "fullchain_pem": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "private_key_pem": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDTTr\/thqcXA5el\nXEXhEggREFhKGCdm2Y+Giq07D2aEq02e1PBkktvi3BZVmjWBLYpKJ9+D6l4psnkT\nZPTele8vfQMHK8Cuxjjrno+num3jAnzEqUZf2Jv51247tv1SBOryjr4G0cJtsl82\n2oynYH+JMHWxLoLwPcjG5wA+FKCUj7U+LJoyZ5LVKaqx2iesqJ015fLD0bagS3KY\ntTejWi\/byVdu7ozfBZd\/ydHpysYCxjP4TcFhrKryxvl27Yt7xfwPakz6p1W3hAoq\nw6M+fA\/HfzLL4GmzlSQKLm0c6RRZ0w1UTUAspA+Kt6yzRPHdU8+q2uVMmHITrD5M\nDhrug2fNAgMBAAECggEBAKXR5ZFbGqJXwlgUqg2uXcAuSGqUu87dKeFV0A1Jz5SK\n7VWYGrGCAaXsOmagph4iA6Sf16oocA5erN7IWdSWamWkv4yQDBvbF+3mtyrThMoh\nOJIHmF88l2IfabTYq8ACdfE0jPDDCMWWtVtRdBEhC9Q3wBPzwPMQOQ\/FVQ5il4Uc\nN\/+2AGtjmwVNmDo420Q40tNY2SCSVCRnuMM4IzzJoDPvilGytqY+5V2e6dnAMtr\/\n+RkWcJR\/xp4BmVSfhFg67Mh2Af68OfoFsck8JPh8byTL2dpiOATMYyX+jUK21agO\nRJ7vNlufMqri0yuR8RvZgr4VPtQ44VmXzzbirpCQTk0CgYEA6WKUB0t+kWnvxOpO\nNGSaMOe4UJaA7ab\/mya0FWrUr9U2dBqTYiGgCBjdIEYaW2RfJUlSONVjVpFOOSOS\nU9U4j8s+D5ykIvP2+eEemL+64\/fbSA6nrQgA\/ljN3yw0dn4ALYpDA0Z1XQJP+UHG\nvaYpONSWylOX9pBV1RKdGJ85SSMCgYEA58iC57SrdXIDQmGXnuS9dwWHojMm9WQ3\n\/VI7ZpmuvuRGArU+HDR9x16AOMG6wde3kl6GVErB\/ACLS\/CnTqYkljTv31gT8yby\ntwW0M8Cgv31LK664m6mrkp5ok8mrbk1L7KQGnhw1PyS9B25DCkn\/wLoFvV+73dNx\nhpWnjsuPMk8CgYEAjYan+ZyATjINoj3r2r2++zUpgkUiPfttOWrI\/cvg2hfTg6iy\nA2ocn4xkW7PnO9CsGfJSmABe0xoec2vsykWcnSZEpjb5GfETrggkA8EQ1jlxkkrA\nx57460Ry44js74YNGZCkfpH1jcdfM+n9WPgwOzQ\/lMYIew6f3iwBc\/LqTD0CgYA6\nwTxVyhmwot8qo5yQvcE9e5xfRII6sFX1FDRUlN6UKz+IDjOZaMD9mfn86TcTTkCN\njQKWOYElBWpKLM3shPc\/UFoCDsy31YavWHXOrKTTBcrZXugTJZaFizxNQlD\/m\/6E\nFSxMRjBFOmXkjVHXONzpGP69e5ge6iucBzG7Y+R\/xwKBgHhQ0\/zrQGXIJzxLtQ41\n4V9+zq2FQYZbsh8WtWIPrDJFecPadxnYMYga34GjAREal6\/gaKO3hzZOhOnyzjTm\nCwxdxjjK7St5QdeF1y43qSZreuwxWHGT19G4ERjlZtZwimRs34DT3+f3QqLG9vp6\nWbR6pOpwcwl7ajk87KHVSeYW\n-----END PRIVATE KEY-----\n",
                            "lets_encrypt": 1,
                            "expires_at": "2019-05-08 08:47:35",
                            "created_at": "2019-02-07 09:47:29",
                            "updated_at": "2019-02-07 09:47:42"
                        },
                        {
                            "domain": "www.test-thomas.xyz",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "GENERATED",
                            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----",
                            "chain_pem": null,
                            "fullchain_pem": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "private_key_pem": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDck0jSp0n9jDPH\nBNPmd8owbIUP9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/\nEWDFW0iOngAEPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUE\nUyJG8QaMbn2pbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QY\nT2I8pZ5xbWHGgaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tag\nPcCzvYSDxfVDyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8\nGCWtYjkRAgMBAAECggEADaQaK9TmsYR7K0K0LBuaaHY9oGgNRyzj2\/GYcSi\/rR+u\nZylRo9BaZXsveN5cI5kgVBQMGlxlZUrL00\/q0Sm9CfzheWHD8dPIIBFr1GbYtVV6\nUrml2f1SNP6U8zUhb6wRVE7rG0Vyrl\/GSkct5n8\/bW3j3Zd1sqoFAWZKWP0Q7Vga\nWnN9PNXOR\/a\/dn6TlBMtYdfI7z7SwzEJlOl2bgH4hkaK6kmbZY7IhUwUOES4TqXE\nb6Cw\/JpTDD5Xid\/z93zRAN9Wym9sftMvHQ3vM7qMDqJW6bvlnw85NLOmzTxmUUkK\n49JydWRmKPXEDsqomg1mzaQ5w0YtcEqrE1efmDuiQQKBgQD4gDBKnRZfqpQ9QTCL\nSmWWDnQEd6lLjBNQmKhgAK\/QiBKszafr9K8RFWNMQ4sL2PcBnUKW3xqdT9z03PfO\nAm+oZITrL3AYx+JKQ3WlSAu19TADgwufyTDM1ybreTKOudfoBCz6DEBCfukpRUCo\nelUb5xszDtOiMOnAA1UIcS3sGQKBgQDjO1sgwUXKXaLE+D7j54lnh1iSxuS\/mPe4\nwZeDHtESrjq7\/nBeIuNAWoHwO1Ek1LhM2BqPYiqFksx+xbHKgPVOXItU7tX9EACH\njAZOek0TRFgSuCl5rffcOEIos3CrtsCuN5dsR\/SRTF\/Lvb2OPVpiW8KvdPurtO3N\n1gqeaarTuQKBgC96\/r8i6KV6yDwz+nyCyIo1VMGNw5ElwIMDyBgfyXgEp9zQpqcU\n52ZSOdjWhvjKideLHrAJDOLF4af\/mHGKUZ9RJXxyYe66MmiSHyZnb6VipbvmDBCJ\ntoNNEKipTZmrtK8mLRnRwW1zJkW2b7ZBOYXNUIse6BzzT5ZajKLCTU3xAoGAAQiC\nD5IRaSwn01F1p7+jxk69Pl2dKKnfZn2q3LPFK5qTNcugYy0xb1d6A8ehRNOayu6o\noEJIAzd5qpHnjw4rD2IoWAiF\/JKYDgW6+ZxgwVesNtmThrQdzmiLFHhMaNt54NDr\n5Vgmaoq4XMrOE9l\/kbbtGbMkedFmy2rPvYypdDECgYEAmK2DPfL613Mp6e0j5+qo\n2iCzz1SMm2QKSOAW+\/dbuE+BIxcT295vq\/u4+lcaTBXUeG6aEdkdbpZe4+hJyteF\nEE8NdMCFHsV0QBW\/pN5szkou7967lbb\/4u423r4WdZDUkCTCVNIKG0975\/cyVCEC\nJCwiB5cREBk64d4mas5XfsA=\n-----END PRIVATE KEY-----\n",
                            "lets_encrypt": 1,
                            "expires_at": "2019-05-08 08:48:15",
                            "created_at": "2019-02-07 09:48:08",
                            "updated_at": "2019-02-07 09:48:22"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "OrderIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "id": "95fa4847-22d2-4bbe-a121-cd80537a980a",
                            "domain": "www.mon-site-web.org",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"www.mon-site-web.org\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305411758",
                            "status": "valid",
                            "expires": "2019-05-08 08:47:35",
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"www.mon-site-web.org\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\"]",
                            "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-03-06T17:21:41Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844282\", \"type\": \"tls-alpn-01\", \"token\": \"K_41ToFmK5aF2kXeLNEGMO6AGRXgt2R6Ye2Nj06-wDc\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844283\", \"type\": \"dns-01\", \"token\": \"yXUAM538VcDds46xwaO4hBXRT9OyNWTlMM-vm4M0Gnk\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\/12240844284\", \"type\": \"http-01\", \"token\": \"vJEGWf-0Ma92I__wvIpZp_J3sjfmkrIKhg6LH_vSUqU\", \"status\": \"valid\", \"validationRecord\": [{\"url\": \"http:\/\/www.mon-site-web.org\/.well-known\/acme-challenge\/vJEGWf-0Ma92I__wvIpZp_J3sjfmkrIKhg6LH_vSUqU\", \"port\": \"80\", \"hostname\": \"www.mon-site-web.org\", \"addressUsed\": \"91.198.105.214\", \"addressesResolved\": [\"91.198.105.214\"]}]}], \"identifier\": {\"type\": \"dns\", \"value\": \"www.mon-site-web.org\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/xDeJuBbmvy5140GQ4tbDarp6zVskCoHYpScUdLlYL_M\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/305411758",
                            "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/04f1dbfedb2937a6cbed5567e418fd6af6a8",
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDTTr\/thqcXA5el\nXEXhEggREFhKGCdm2Y+Giq07D2aEq02e1PBkktvi3BZVmjWBLYpKJ9+D6l4psnkT\nZPTele8vfQMHK8Cuxjjrno+num3jAnzEqUZf2Jv51247tv1SBOryjr4G0cJtsl82\n2oynYH+JMHWxLoLwPcjG5wA+FKCUj7U+LJoyZ5LVKaqx2iesqJ015fLD0bagS3KY\ntTejWi\/byVdu7ozfBZd\/ydHpysYCxjP4TcFhrKryxvl27Yt7xfwPakz6p1W3hAoq\nw6M+fA\/HfzLL4GmzlSQKLm0c6RRZ0w1UTUAspA+Kt6yzRPHdU8+q2uVMmHITrD5M\nDhrug2fNAgMBAAECggEBAKXR5ZFbGqJXwlgUqg2uXcAuSGqUu87dKeFV0A1Jz5SK\n7VWYGrGCAaXsOmagph4iA6Sf16oocA5erN7IWdSWamWkv4yQDBvbF+3mtyrThMoh\nOJIHmF88l2IfabTYq8ACdfE0jPDDCMWWtVtRdBEhC9Q3wBPzwPMQOQ\/FVQ5il4Uc\nN\/+2AGtjmwVNmDo420Q40tNY2SCSVCRnuMM4IzzJoDPvilGytqY+5V2e6dnAMtr\/\n+RkWcJR\/xp4BmVSfhFg67Mh2Af68OfoFsck8JPh8byTL2dpiOATMYyX+jUK21agO\nRJ7vNlufMqri0yuR8RvZgr4VPtQ44VmXzzbirpCQTk0CgYEA6WKUB0t+kWnvxOpO\nNGSaMOe4UJaA7ab\/mya0FWrUr9U2dBqTYiGgCBjdIEYaW2RfJUlSONVjVpFOOSOS\nU9U4j8s+D5ykIvP2+eEemL+64\/fbSA6nrQgA\/ljN3yw0dn4ALYpDA0Z1XQJP+UHG\nvaYpONSWylOX9pBV1RKdGJ85SSMCgYEA58iC57SrdXIDQmGXnuS9dwWHojMm9WQ3\n\/VI7ZpmuvuRGArU+HDR9x16AOMG6wde3kl6GVErB\/ACLS\/CnTqYkljTv31gT8yby\ntwW0M8Cgv31LK664m6mrkp5ok8mrbk1L7KQGnhw1PyS9B25DCkn\/wLoFvV+73dNx\nhpWnjsuPMk8CgYEAjYan+ZyATjINoj3r2r2++zUpgkUiPfttOWrI\/cvg2hfTg6iy\nA2ocn4xkW7PnO9CsGfJSmABe0xoec2vsykWcnSZEpjb5GfETrggkA8EQ1jlxkkrA\nx57460Ry44js74YNGZCkfpH1jcdfM+n9WPgwOzQ\/lMYIew6f3iwBc\/LqTD0CgYA6\nwTxVyhmwot8qo5yQvcE9e5xfRII6sFX1FDRUlN6UKz+IDjOZaMD9mfn86TcTTkCN\njQKWOYElBWpKLM3shPc\/UFoCDsy31YavWHXOrKTTBcrZXugTJZaFizxNQlD\/m\/6E\nFSxMRjBFOmXkjVHXONzpGP69e5ge6iucBzG7Y+R\/xwKBgHhQ0\/zrQGXIJzxLtQ41\n4V9+zq2FQYZbsh8WtWIPrDJFecPadxnYMYga34GjAREal6\/gaKO3hzZOhOnyzjTm\nCwxdxjjK7St5QdeF1y43qSZreuwxWHGT19G4ERjlZtZwimRs34DT3+f3QqLG9vp6\nWbR6pOpwcwl7ajk87KHVSeYW\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RII\nERBYShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXv\nL30DByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/\niTB1sS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov\n28lXbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwP\nx38yy+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNn\nzQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----",
                            "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFXzCCBEegAwIBAgISBPHb\/tspN6bL7VVn5Bj9avaoMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ3MzVaFw0x\nOTA1MDgwODQ3MzVaMB8xHTAbBgNVBAMTFHd3dy5tb24tc2l0ZS13ZWIub3JnMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA006\/7YanFwOXpVxF4RIIERBY\nShgnZtmPhoqtOw9mhKtNntTwZJLb4twWVZo1gS2KSiffg+peKbJ5E2T03pXvL30D\nByvArsY4656Pp7pt4wJ8xKlGX9ib+dduO7b9UgTq8o6+BtHCbbJfNtqMp2B\/iTB1\nsS6C8D3IxucAPhSglI+1PiyaMmeS1SmqsdonrKidNeXyw9G2oEtymLU3o1ov28lX\nbu6M3wWXf8nR6crGAsYz+E3BYayq8sb5du2Le8X8D2pM+qdVt4QKKsOjPnwPx38y\ny+Bps5UkCi5tHOkUWdMNVE1ALKQPiress0Tx3VPPqtrlTJhyE6w+TA4a7oNnzQID\nAQABo4ICaDCCAmQwDgYDVR0PAQH\/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQtlEPwkGQj\/XwlRqrn\n1kwbShcrezAfBgNVHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEF\nBQcBAQRjMGEwLgYIKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5j\ncnlwdC5vcmcwLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5j\ncnlwdC5vcmcvMB8GA1UdEQQYMBaCFHd3dy5tb24tc2l0ZS13ZWIub3JnMEwGA1Ud\nIARFMEMwCAYGZ4EMAQIBMDcGCysGAQQBgt8TAQEBMCgwJgYIKwYBBQUHAgEWGmh0\ndHA6Ly9jcHMubGV0c2VuY3J5cHQub3JnMIIBAwYKKwYBBAHWeQIEAgSB9ASB8QDv\nAHUAdH7agzGtMxCRIZzOJU9CcMK\/\/V5CIAjGNzV55hB7zFYAAAFox1r9BQAABAMA\nRjBEAiBODaQImCYuu2CbU\/uJoqU\/g3nKE27vadRaldLxvdztyQIgQ0r3tLkacalV\nL+z1AbpvzicxjWjG9bdUHp3P6aMOTJgAdgBj8tvN6DvMLM8LcoQnV2szpI1hd4+9\ndaY4scdoVEvYjQAAAWjHWv7nAAAEAwBHMEUCIAzagHsJZvCkjYW8P+XkQsIGZJb7\np87EgXXunSVcScsxAiEAvWDWIjixzvvdgF9FFHLTE0brQHYMRR4c0FKwwASK59Ew\nDQYJKoZIhvcNAQELBQADggEBAFgN\/SY6O+n19TlAqkAmFuAQJL8lEhm0VSM83P+u\nIgmg6WwbwztzQP7anct\/dgOedMLavWggJhWjIMT+5U5PE1YbPLG75UAMketrkLA2\n\/+5dChfLs4KNzVdo8\/gsNt5IWlRhs+1yf\/kGHy0boR5AlNJ9iWl1StkYpvOr4iZw\nqWqG0dzKx5wL7Yzk1LRecKXYBHzmHme9bBBRirLmc4WHHVSU6jjkIK9s3QAVh2f+\nzOOGDnKgSvbz6HQZDlK9b1cG+bWC6LbDUo\/tCCTif2HQ+wxWbmfCu34lIiV6dWiQ\nWDEX9OHrMOPlPaoa0vOPzKDa3r6PdJiNjEQaAvbIlnEknmE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "fetched_at": "2019-02-07 09:47:42",
                            "created_at": "2019-02-07 09:47:37",
                            "updated_at": "2019-02-07 09:47:42"
                        },
                        {
                            "id": "de4fe8e0-82d6-47ee-be73-743ec28715c3",
                            "domain": "www.test-thomas.xyz",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "key_type": "rsa",
                            "key_size": 2048,
                            "domains": "[\"www.test-thomas.xyz\"]",
                            "not_before": null,
                            "not_after": null,
                            "url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/order\/50861688\/305412271",
                            "status": "valid",
                            "expires": "2019-05-08 08:48:15",
                            "identifiers": "[{\"type\": \"dns\", \"value\": \"www.test-thomas.xyz\"}]",
                            "authorization_urls": "[\"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\"]",
                            "authorizations": "[{\"status\": \"valid\", \"expires\": \"2019-03-07T14:18:37Z\", \"challenges\": [{\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287988\", \"type\": \"dns-01\", \"token\": \"0XUMXiFmU7VC55nIM-06wCjZ4xNxJbo5S6aZ6V7Fwkc\", \"status\": \"pending\"}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287989\", \"type\": \"http-01\", \"token\": \"227jejLAY988Bc725geKjWj6Ug8hfib83k5B1XO7mkQ\", \"status\": \"valid\", \"validationRecord\": [{\"url\": \"http:\/\/www.test-thomas.xyz\/.well-known\/acme-challenge\/227jejLAY988Bc725geKjWj6Ug8hfib83k5B1XO7mkQ\", \"port\": \"80\", \"hostname\": \"www.test-thomas.xyz\", \"addressUsed\": \"91.198.105.214\", \"addressesResolved\": [\"91.198.105.214\"]}]}, {\"url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/challenge\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\/12271287990\", \"type\": \"tls-alpn-01\", \"token\": \"vibyAaRgjsGJoOq2B9tVbfABOQ_7P4ERkfzIL9R4v5g\", \"status\": \"pending\"}], \"identifier\": {\"type\": \"dns\", \"value\": \"www.test-thomas.xyz\"}, \"authorization_url\": \"https:\/\/acme-v02.api.letsencrypt.org\/acme\/authz\/wYo3LEKjj2F7tXsE7iGx8traaqo-sIAEVOgj8b1df3E\"}]",
                            "finalize_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/finalize\/50861688\/305412271",
                            "certificate_url": "https:\/\/acme-v02.api.letsencrypt.org\/acme\/cert\/04d65dfce796a66137b30b138cdaa4e4fede",
                            "certificate_private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDck0jSp0n9jDPH\nBNPmd8owbIUP9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/\nEWDFW0iOngAEPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUE\nUyJG8QaMbn2pbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QY\nT2I8pZ5xbWHGgaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tag\nPcCzvYSDxfVDyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8\nGCWtYjkRAgMBAAECggEADaQaK9TmsYR7K0K0LBuaaHY9oGgNRyzj2\/GYcSi\/rR+u\nZylRo9BaZXsveN5cI5kgVBQMGlxlZUrL00\/q0Sm9CfzheWHD8dPIIBFr1GbYtVV6\nUrml2f1SNP6U8zUhb6wRVE7rG0Vyrl\/GSkct5n8\/bW3j3Zd1sqoFAWZKWP0Q7Vga\nWnN9PNXOR\/a\/dn6TlBMtYdfI7z7SwzEJlOl2bgH4hkaK6kmbZY7IhUwUOES4TqXE\nb6Cw\/JpTDD5Xid\/z93zRAN9Wym9sftMvHQ3vM7qMDqJW6bvlnw85NLOmzTxmUUkK\n49JydWRmKPXEDsqomg1mzaQ5w0YtcEqrE1efmDuiQQKBgQD4gDBKnRZfqpQ9QTCL\nSmWWDnQEd6lLjBNQmKhgAK\/QiBKszafr9K8RFWNMQ4sL2PcBnUKW3xqdT9z03PfO\nAm+oZITrL3AYx+JKQ3WlSAu19TADgwufyTDM1ybreTKOudfoBCz6DEBCfukpRUCo\nelUb5xszDtOiMOnAA1UIcS3sGQKBgQDjO1sgwUXKXaLE+D7j54lnh1iSxuS\/mPe4\nwZeDHtESrjq7\/nBeIuNAWoHwO1Ek1LhM2BqPYiqFksx+xbHKgPVOXItU7tX9EACH\njAZOek0TRFgSuCl5rffcOEIos3CrtsCuN5dsR\/SRTF\/Lvb2OPVpiW8KvdPurtO3N\n1gqeaarTuQKBgC96\/r8i6KV6yDwz+nyCyIo1VMGNw5ElwIMDyBgfyXgEp9zQpqcU\n52ZSOdjWhvjKideLHrAJDOLF4af\/mHGKUZ9RJXxyYe66MmiSHyZnb6VipbvmDBCJ\ntoNNEKipTZmrtK8mLRnRwW1zJkW2b7ZBOYXNUIse6BzzT5ZajKLCTU3xAoGAAQiC\nD5IRaSwn01F1p7+jxk69Pl2dKKnfZn2q3LPFK5qTNcugYy0xb1d6A8ehRNOayu6o\noEJIAzd5qpHnjw4rD2IoWAiF\/JKYDgW6+ZxgwVesNtmThrQdzmiLFHhMaNt54NDr\n5Vgmaoq4XMrOE9l\/kbbtGbMkedFmy2rPvYypdDECgYEAmK2DPfL613Mp6e0j5+qo\n2iCzz1SMm2QKSOAW+\/dbuE+BIxcT295vq\/u4+lcaTBXUeG6aEdkdbpZe4+hJyteF\nEE8NdMCFHsV0QBW\/pN5szkou7967lbb\/4u423r4WdZDUkCTCVNIKG0975\/cyVCEC\nJCwiB5cREBk64d4mas5XfsA=\n-----END PRIVATE KEY-----\n",
                            "certificate_public_key": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3JNI0qdJ\/YwzxwTT5nfK\nMGyFD\/W\/ZgTdoPfgVvzU2f+XVC3H2z0XjKNGDSCXtxA6cFPkXD\/n2h1AfxFgxVtI\njp4ABD8\/M1WVPrE6qtXwudZqwilYV548Z2J3vnEaQ21FsVB++EQWOOAlBFMiRvEG\njG59qWyIUFNauooO\/L3c6EKEqmre6hRa5+CQvE\/LU\/aJLUZa7O7PVId0GE9iPKWe\ncW1hxoGgIW+1rpdTYe14VB\/OItFYXKOrWoHFgiofZO+jS8qPb9S0BPbWoD3As72E\ng8X1Q8kc78pf6aFDOUhvSZWAv9zMY+zLCX72b73wRb1RGjEIcb3KO392\/BglrWI5\nEQIDAQAB\n-----END PUBLIC KEY-----\n",
                            "certificate_certificate": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----",
                            "certificate_fullchain": "-----BEGIN CERTIFICATE-----\nMIIFXjCCBEagAwIBAgISBNZd\/OeWpmE3swsTjNqk5P7eMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xOTAyMDcwODQ4MTVaFw0x\nOTA1MDgwODQ4MTVaMB4xHDAaBgNVBAMTE3d3dy50ZXN0LXRob21hcy54eXowggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDck0jSp0n9jDPHBNPmd8owbIUP\n9b9mBN2g9+BW\/NTZ\/5dULcfbPReMo0YNIJe3EDpwU+RcP+faHUB\/EWDFW0iOngAE\nPz8zVZU+sTqq1fC51mrCKVhXnjxnYne+cRpDbUWxUH74RBY44CUEUyJG8QaMbn2p\nbIhQU1q6ig78vdzoQoSqat7qFFrn4JC8T8tT9oktRlrs7s9Uh3QYT2I8pZ5xbWHG\ngaAhb7Wul1Nh7XhUH84i0Vhco6tagcWCKh9k76NLyo9v1LQE9tagPcCzvYSDxfVD\nyRzvyl\/poUM5SG9JlYC\/3Mxj7MsJfvZvvfBFvVEaMQhxvco7f3b8GCWtYjkRAgMB\nAAGjggJoMIICZDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEG\nCCsGAQUFBwMCMAwGA1UdEwEB\/wQCMAAwHQYDVR0OBBYEFPSpWw\/laMs\/uCpYvXFV\nk3VNgr2EMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe\/zqOyhMG8GCCsGAQUF\nBwEBBGMwYTAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZzAvBggrBgEFBQcwAoYjaHR0cDovL2NlcnQuaW50LXgzLmxldHNlbmNy\neXB0Lm9yZy8wHgYDVR0RBBcwFYITd3d3LnRlc3QtdGhvbWFzLnh5ejBMBgNVHSAE\nRTBDMAgGBmeBDAECATA3BgsrBgEEAYLfEwEBATAoMCYGCCsGAQUFBwIBFhpodHRw\nOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2\nAHR+2oMxrTMQkSGcziVPQnDCv\/1eQiAIxjc1eeYQe8xWAAABaMdbmaEAAAQDAEcw\nRQIgMEIz18ayGC3RZJG1O339GEQM+iW\/9P6HyADnk63weoUCIQDIfRHinm5ueCpf\npDVetRR685\/KOaSSDRt+9qx\/to68ugB2ACk8UZZUyDlluqpQ\/FgH1Ldvv1h6KXLc\npMMM9OVFR\/R4AAABaMdbmYkAAAQDAEcwRQIhAIgTE72ukSeakq6QBno1HIVaSWTn\nPNIWOsmmaSZb9I8IAiBLP33MDb8oDqYdI3Z6CutWn977QNg3UJGGH4MwbOlUfjAN\nBgkqhkiG9w0BAQsFAAOCAQEAZeOw7A4QSaQoE2LpJNSc70forYAO8Y9s4HRAQ48X\nkkdYP0XscCyIm4oODV3Uf90VugZa8n2llMskP93743Bgm3tlLgIfVkcaVJcYwmYv\ntFGzq9RzxAYsnMiD5tqqCj5hww+zs7MBFvaMFZ88DzECHAyT26SR0o624j0GMzQU\ndfVxp0gnlc9ogsHYz3haaSxljHH9m7jcfhs3NM5nc0Q0UQcz5\/rfKzMmdn73mc\/u\n8tI38SfM9gy9yFvTDhZZAcFPYOGm66awxpC+A953dfF4fjcP0HbvbIV5vM9uSJ7B\nfZ7DYwc8sOWA+DHhWEI1vQYPAEYuNBhHO2gRBdSOzOww5Q==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA\/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan\/PQeGdxyGkOlZHP\/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h\/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB\/onkxEz0tNvjj\n\/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH\/BAgwBgEB\/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf\/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr\/1wXKtx8\/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so\/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6\/DNFu0Qg==\n-----END CERTIFICATE-----\n",
                            "fetched_at": "2019-02-07 09:48:22",
                            "created_at": "2019-02-07 09:48:17",
                            "updated_at": "2019-02-07 09:48:22"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            },
            "ServerHasCertificateIndexExampleResponse": {
                "value": {
                    "data": [
                        {
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": "www.mon-site-web.org",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "NONE",
                            "status_updated_at": null,
                            "created_at": "2019-02-07 09:58:50",
                            "updated_at": "2019-02-07 09:58:50"
                        },
                        {
                            "server_id": "1a1083f0-628d-11e8-adc0-fa7ae01bbebc",
                            "domain": "www.test-thomas.xyz",
                            "project_id": "9fee04c4-3f11-11e8-b467-0ed5f89f718b",
                            "status": "NONE",
                            "status_updated_at": null,
                            "created_at": "2019-02-07 09:58:50",
                            "updated_at": "2019-02-07 09:58:50"
                        }
                    ],
                    "meta": {
                        "pagination": {
                            "total": 2,
                            "count": 2,
                            "per_page": 20,
                            "current_page": 1,
                            "total_pages": 1,
                            "links": []
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiBearer": {
                "type": "http",
                "scheme": "bearer"
            },
            "apiOAuth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    },
                    "authorizationCode": {
                        "authorizationUrl": "\/oauth\/authorize",
                        "tokenUrl": "\/oauth\/token",
                        "refreshUrl": "\/oauth\/token\/refresh",
                        "scopes": {
                            "*": "Access to anything"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "apiBearer": [
                "*"
            ]
        },
        {
            "apiOAuth": [
                "*"
            ]
        }
    ]
}